{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/christian/Development/fible-frontend-nextjs/src/components/inputscreen-components/simulator/simulatorComponents/headline.tsx\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { updateSimulatorSelection, updateInputScreenUi } from '../../../../redux/actions/uiActions';\nimport { setSelectedComponent } from '../../../../redux/actions/dataActions';\nimport { addOrUpdateHeadline } from '../../../../redux/actions/dataActions';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nvar Headline =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Headline, _React$Component);\n\n  function Headline() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Headline);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Headline)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelection\", function () {\n      var selectedComponentId = _this.props.component.id;\n\n      if (_this.props.component.id != _this.props.uiState.simulator.selected) {\n        _this.props.updateSimulatorSelection({\n          selectedComponentId: selectedComponentId\n        });\n\n        _this.props.setSelectedComponent({\n          selectedComponentId: selectedComponentId\n        });\n\n        _this.props.updateInputScreenUi(\"HEADLINE_INPUT\");\n      } else {\n        selectedComponentId = \"empty\";\n\n        _this.props.updateSimulatorSelection({\n          selectedComponentId: selectedComponentId\n        });\n\n        _this.props.setSelectedComponent({\n          selectedComponentId: selectedComponentId\n        });\n\n        _this.props.updateInputScreenUi(\"MENU\");\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHeadline\", function (e) {\n      var type = _this.props.uiState.menu.htype;\n      var headline = e.target.value;\n      var selectedHtypeId = _this.props.dataState.selectedHtypeId;\n      var selectedComponentId = _this.props.dataState.selectedComponentId;\n      var dispatch = \"UPDATE_HEADLINE\";\n\n      _this.props.addOrUpdateHeadline({\n        type: type,\n        headline: headline,\n        selectedHtypeId: selectedHtypeId,\n        dispatch: dispatch,\n        selectedComponentId: selectedComponentId\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Headline, [{\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(e) {\n      e.target.style.height = 'inherit';\n      e.target.style.height = \"\".concat(e.target.scrollHeight, \"px\"); // In case you have a limitation\n      // e.target.style.height = `${Math.min(e.target.scrollHeight, limit)}px`;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Draggable, {\n        draggableId: this.props.component.id,\n        index: this.props.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, function (provided) {\n        return __jsx(Container, _extends({\n          key: _this2.props.component.id\n        }, provided.draggableProps, provided.dragHandleProps, {\n          ref: provided.innerRef,\n          onClick: _this2.handleSelection,\n          datatype: _this2.props.component.id == _this2.props.uiState.simulator.selected ? \"-0.2vh\" : \"0\",\n          property: _this2.props.component.id == _this2.props.uiState.simulator.selected ? \"dashed\" : \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), __jsx(HeadlineText, {\n          value: _this2.props.component.headline,\n          onChange: function onChange(e) {\n            return _this2.handleHeadline(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return Headline;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    uiState: state.ui,\n    dataState: state.data\n  };\n};\n\nvar Container = styled.div.withConfig({\n  displayName: \"headline__Container\",\n  componentId: \"sc-19yc47e-0\"\n})([\"height:auto;width:98%;outline:0px solid transparent;word-wrap:break-word;padding:1%;border:\", \" 0.2vh;margin:\", \";border-radius:2.5vh;\"], function (props) {\n  return props.property;\n}, function (props) {\n  return props.datatype;\n});\nvar HeadlineText = styled(TextareaAutosize).withConfig({\n  displayName: \"headline__HeadlineText\",\n  componentId: \"sc-19yc47e-1\"\n})([\"font-weight:lighter;height:94%;width:90%;font-size:3vh;margin:0;padding:0.5vh;text-align:center;resize:none;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;align-self:center;border:0;display:flex;:focus{outline:none;caret-color:salmon;}\"]);\nvar HeadlineText2 = styled.textarea.withConfig({\n  displayName: \"headline__HeadlineText2\",\n  componentId: \"sc-19yc47e-2\"\n})([\"font-weight:lighter;height:94%;width:90%;font-size:3vh;margin:0;padding:0.5vh;text-align:center;resize:none;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;align-self:center;border:0;display:flex;:focus{outline:none;caret-color:salmon;}\"]);\nexport default connect(mapStateToProps, {\n  updateSimulatorSelection: updateSimulatorSelection,\n  setSelectedComponent: setSelectedComponent,\n  updateInputScreenUi: updateInputScreenUi,\n  addOrUpdateHeadline: addOrUpdateHeadline\n})(Headline);","map":{"version":3,"sources":["/home/christian/Development/fible-frontend-nextjs/src/components/inputscreen-components/simulator/simulatorComponents/headline.tsx"],"names":["styled","React","connect","Draggable","updateSimulatorSelection","updateInputScreenUi","setSelectedComponent","addOrUpdateHeadline","TextareaAutosize","Headline","selectedComponentId","props","component","id","uiState","simulator","selected","e","type","menu","htype","headline","target","value","selectedHtypeId","dataState","dispatch","style","height","scrollHeight","index","provided","draggableProps","dragHandleProps","innerRef","handleSelection","handleHeadline","Component","mapStateToProps","state","ui","data","Container","div","property","datatype","HeadlineText","HeadlineText2","textarea"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd'\nimport { updateSimulatorSelection, updateInputScreenUi} from '../../../../redux/actions/uiActions'\nimport { setSelectedComponent } from '../../../../redux/actions/dataActions'\nimport { addOrUpdateHeadline, emptySelectedComponent } from '../../../../redux/actions/dataActions'\nimport TextareaAutosize from 'react-autosize-textarea';\n\n\n\nclass Headline extends React.Component<{component:any, index:any,uiState:any,dataState:any, addOrUpdateHeadline:Function, updateSimulatorSelection:Function, setSelectedComponent:Function, updateInputScreenUi:Function}> {\n    handleSelection = () => {\n        let selectedComponentId = this.props.component.id\n        if(this.props.component.id != this.props.uiState.simulator.selected){\n        this.props.updateSimulatorSelection({selectedComponentId})\n        this.props.setSelectedComponent({selectedComponentId})\n        this.props.updateInputScreenUi(\"HEADLINE_INPUT\")\n        } else {\n        selectedComponentId = \"empty\"\n        this.props.updateSimulatorSelection({selectedComponentId})\n        this.props.setSelectedComponent({selectedComponentId})\n        this.props.updateInputScreenUi(\"MENU\")\n        }\n    }\n    handleKeyDown(e) {\n        e.target.style.height = 'inherit';\n        e.target.style.height = `${e.target.scrollHeight}px`; \n        // In case you have a limitation\n        // e.target.style.height = `${Math.min(e.target.scrollHeight, limit)}px`;\n      }\n    \n\n    handleHeadline = (e) => {\n        const type = this.props.uiState.menu.htype\n        const headline = e.target.value\n        const selectedHtypeId = this.props.dataState.selectedHtypeId\n        const selectedComponentId = this.props.dataState.selectedComponentId\n        const  dispatch = \"UPDATE_HEADLINE\"\n        this.props.addOrUpdateHeadline({ type, headline, selectedHtypeId, dispatch, selectedComponentId })\n\n\n    }\n\n    render() {\n        return (<Draggable draggableId={this.props.component.id} index={this.props.index}>\n        {provided =>( \n        <Container\n            key = {this.props.component.id}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onClick={this.handleSelection}\n            datatype={this.props.component.id == this.props.uiState.simulator.selected ? \"-0.2vh\":\"0\" }\n            property={this.props.component.id == this.props.uiState.simulator.selected ? \"dashed\":\"none\" }\n            >\n            <HeadlineText value={this.props.component.headline} onChange={ (e) => this.handleHeadline(e)} ></HeadlineText>\n        </Container>\n        )\n        }\n    </Draggable>)\n    }\n}\n\nconst mapStateToProps = state => {\n    return { uiState: state.ui, dataState: state.data };\n};\n\n\nconst Container = styled.div`\n    height:auto;\n    width:98%;\n    outline: 0px solid transparent;\n    word-wrap: break-word;\n    padding:1%;\n    border: ${props => props.property} 0.2vh;\n    margin: ${props => props.datatype};\n    border-radius:2.5vh;\n`\n\nconst  HeadlineText = styled(TextareaAutosize)`\n    font-weight: lighter;\n    height: 94%;\n    width: 90%;\n    font-size:3vh;\n    margin:0;\n    padding:0.5vh;\n    text-align:center;\n    resize:none;\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;\n    align-self:center;\n    border:0;\n    display:flex;\n    :focus {\n        outline:none;\n        caret-color:salmon;\n    }\n`\n\nconst HeadlineText2 = styled.textarea`\n    font-weight: lighter;\n    height: 94%;\n    width: 90%;\n    font-size:3vh;\n    margin:0;\n    padding:0.5vh;\n    text-align:center;\n    resize:none;\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;\n    align-self:center;\n    border:0;\n    display:flex;\n    :focus {\n        outline:none;\n        caret-color:salmon;\n    }\n`\n\nexport default connect(mapStateToProps,{updateSimulatorSelection, setSelectedComponent, updateInputScreenUi,addOrUpdateHeadline})(Headline);\n\n"]},"metadata":{},"sourceType":"module"}