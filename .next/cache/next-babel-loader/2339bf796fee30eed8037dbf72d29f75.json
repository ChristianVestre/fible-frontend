{"ast":null,"code":"import { REMOVE_ROUTE, UPDATE_ROUTE_STATE, UPDATE_SELECTOR_MANAGER_STATE, UPDATE_INPUT_SCREEN_UI, INITIALIZE_INPUT_SCREEN_UI, UPDATE_SIMULATOR_SELECTION } from \"./types\"; //includes route management actions\n\nvar routeId = 0;\nvar updateId = 0;\nvar updateManagerStateId = 0;\nvar updateInputScreenUiId = 0;\nvar initializeInputScreenUiId = 0;\nvar updateSimulatorSelectionId = 0;\nexport var removeRoute = function removeRoute(content) {\n  return {\n    type: REMOVE_ROUTE,\n    payload: {\n      id: ++routeId,\n      content: content\n    }\n  };\n};\nexport var updateOrder = function updateOrder(content) {\n  return {\n    type: UPDATE_ROUTE_STATE,\n    payload: {\n      id: ++updateId,\n      content: content\n    }\n  };\n};\nexport var updateSelectorManagerState = function updateSelectorManagerState(content) {\n  return {\n    type: UPDATE_SELECTOR_MANAGER_STATE,\n    payload: {\n      id: ++updateManagerStateId,\n      content: content\n    }\n  };\n};\nexport var updateInputScreenUi = function updateInputScreenUi(content) {\n  return {\n    type: UPDATE_INPUT_SCREEN_UI,\n    payload: {\n      id: ++updateInputScreenUiId,\n      content: content\n    }\n  };\n};\nexport var initializeInputScreenUi = function initializeInputScreenUi(content) {\n  return {\n    type: INITIALIZE_INPUT_SCREEN_UI,\n    payload: {\n      id: ++initializeInputScreenUiId,\n      content: content\n    }\n  };\n};\nexport var updateSimulatorSelection = function updateSimulatorSelection(content) {\n  return {\n    type: UPDATE_SIMULATOR_SELECTION,\n    payload: {\n      id: ++updateSimulatorSelectionId,\n      content: content\n    }\n  };\n};","map":{"version":3,"sources":["/home/christian/Development/fible-frontend-nextjs/src/redux/actions/uiActions.ts"],"names":["REMOVE_ROUTE","UPDATE_ROUTE_STATE","UPDATE_SELECTOR_MANAGER_STATE","UPDATE_INPUT_SCREEN_UI","INITIALIZE_INPUT_SCREEN_UI","UPDATE_SIMULATOR_SELECTION","routeId","updateId","updateManagerStateId","updateInputScreenUiId","initializeInputScreenUiId","updateSimulatorSelectionId","removeRoute","content","type","payload","id","updateOrder","updateSelectorManagerState","updateInputScreenUi","initializeInputScreenUi","updateSimulatorSelection"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,kBAAvB,EAA2CC,6BAA3C,EACIC,sBADJ,EAC4BC,0BAD5B,EAEIC,0BAFJ,QAGS,SAHT,C,CAIE;;AAGA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,QAAQ,GAAG,CAAf;AACA,IAAIC,oBAAoB,GAAG,CAA3B;AACA,IAAIC,qBAAqB,GAAG,CAA5B;AACA,IAAIC,yBAAyB,GAAG,CAAhC;AACA,IAAIC,0BAA0B,GAAG,CAAjC;AAGA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,OAAO;AAAA,SAAK;AACrCC,IAAAA,IAAI,EAAEd,YAD+B;AAErCe,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAE,EAAEV,OADC;AAEPO,MAAAA,OAAO,EAAPA;AAFO;AAF4B,GAAL;AAAA,CAA3B;AAQP,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAJ,OAAO;AAAA,SAAK;AACnCC,IAAAA,IAAI,EAAEb,kBAD6B;AAEnCc,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAE,EAAET,QADC;AAEPM,MAAAA,OAAO,EAAPA;AAFO;AAF0B,GAAL;AAAA,CAA3B;AAQP,OAAO,IAAMK,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAL,OAAO;AAAA,SAAK;AAClDC,IAAAA,IAAI,EAAEZ,6BAD4C;AAElDa,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAC,EAAER,oBADE;AAEPK,MAAAA,OAAO,EAAPA;AAFO;AAFyC,GAAL;AAAA,CAA1C;AAQN,OAAO,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAN,OAAO;AAAA,SAAK;AAC9CC,IAAAA,IAAI,EAAEX,sBADwC;AAE9CY,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAC,EAAEP,qBADE;AAEPI,MAAAA,OAAO,EAAPA;AAFO;AAFqC,GAAL;AAAA,CAAnC;AAQR,OAAO,IAAMO,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAP,OAAO;AAAA,SAAK;AACjDC,IAAAA,IAAI,EAAEV,0BAD2C;AAEjDW,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAC,EAAEN,yBADE;AAEPG,MAAAA,OAAO,EAAPA;AAFO;AAFwC,GAAL;AAAA,CAAvC;AASP,OAAO,IAAMQ,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAR,OAAO;AAAA,SAAK;AAClDC,IAAAA,IAAI,EAAET,0BAD4C;AAElDU,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAC,EAAEL,0BADE;AAEPE,MAAAA,OAAO,EAAPA;AAFO;AAFyC,GAAL;AAAA,CAAxC","sourcesContent":["import { REMOVE_ROUTE, UPDATE_ROUTE_STATE, UPDATE_SELECTOR_MANAGER_STATE, \n    UPDATE_INPUT_SCREEN_UI, INITIALIZE_INPUT_SCREEN_UI, \n    UPDATE_SIMULATOR_SELECTION\n  } from \"./types\";\n  //includes route management actions\n\n\n  let routeId = 0;\n  let updateId = 0;\n  let updateManagerStateId = 0;\n  let updateInputScreenUiId = 0;\n  let initializeInputScreenUiId = 0;\n  let updateSimulatorSelectionId = 0;\n\n\n  export const removeRoute = content => ({\n    type: REMOVE_ROUTE,\n    payload: {\n      id: ++routeId,\n      content,\n    }\n  });\n  \n  export const updateOrder = content => ({\n      type: UPDATE_ROUTE_STATE,\n      payload: {\n        id: ++updateId,\n        content,\n      }\n    });\n  \n  export const updateSelectorManagerState = content => ({\n      type: UPDATE_SELECTOR_MANAGER_STATE,\n      payload: {\n        id:++updateManagerStateId,\n        content,\n      }\n   })\n  \n   export const updateInputScreenUi = content => ({\n    type: UPDATE_INPUT_SCREEN_UI,\n    payload: {\n      id:++updateInputScreenUiId,\n      content,\n    }\n  })\n  \n  export const initializeInputScreenUi = content => ({\n    type: INITIALIZE_INPUT_SCREEN_UI,\n    payload: {\n      id:++initializeInputScreenUiId,\n      content,\n    }\n    \n  })\n\n  export const updateSimulatorSelection = content => ({\n    type: UPDATE_SIMULATOR_SELECTION,\n    payload: {\n      id:++updateSimulatorSelectionId,\n      content,\n    }\n    \n  })"]},"metadata":{},"sourceType":"module"}