{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { REMOVE_ROUTE, UPDATE_ROUTE_STATE, INITIALIZE_INPUT_SCREEN_UI, UPDATE_INPUT_SCREEN_UI, UPDATE_SIMULATOR_SELECTION } from \"../actions/types\";\nvar initialState = {\n  routes: {\n    \"h12345\": {\n      id: \"h12345\",\n      headline: \"Christian's Norway Route\",\n      subheadline: \"Fjords you just have to explore\",\n      stops: [\"Bergen\", \"Stavanger\", \"Molde\", \"Ålesund\"],\n      attractions: [\"Hiking\", \"Swimming\", \"Nature\"]\n    },\n    \"h54321\": {\n      id: \"h54321\",\n      headline: \"Paul's South Tyrol Route\",\n      subheadline: \"Explore the Dolomites\",\n      stops: [\"Bolzano\", \"Trento\"],\n      attractions: [\"Hiking\", \"Swimming\", \"Nature\", \"Food\"]\n    },\n    \"h12354\": {\n      id: \"h12354\",\n      headline: \"Simon's Allgäu Route\",\n      subheadline: \"Experience Neuschweinstein and so much more!\",\n      stops: [\"Mammendorf\", \"Füssen\"],\n      attractions: [\"Hiking\", \"Swimming\", \"Nature\", \"Sking\"]\n    }\n  },\n  stops: {\n    \"s213141\": {\n      id: \"s213141\",\n      headline: \"Bergen\",\n      subheadline: \"Byen ombringet av fjell\",\n      pois: [\"restaurant\", \"accommodation\", \"activities\"],\n      location: {\n        lat: 1.2222,\n        lng: 1445666\n      }\n    },\n    \"s54321\": {\n      id: \"s54321\",\n      headline: \"Stavanger\",\n      subheadline: \"Oljehovedstaden\",\n      pois: [\"restaurant\", \"accommodation\", \"activities\"],\n      location: {\n        lat: 1.5555,\n        lng: 1.214134\n      }\n    }\n  },\n  pois: {\n    \"p1314134\": {\n      id: \"p1314134\",\n      headline: \"Bergen Fjordrestaurant\",\n      subheadline: \"Fantastisk fisk og sjømat!\",\n      location: {\n        lat: 1.2222,\n        lng: 1445666\n      },\n      address: \"Bryggen 15a\",\n      website: \"www.bergen-fjordrestaurant.no\"\n    }\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"Routes\",\n      ids: [\"h12345\", \"h54321\", \"h12354\"]\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"Stop\",\n      ids: [\"s213141\", \"s54321\"]\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Poi\",\n      ids: [\"p1314134\"]\n    }\n  },\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\"],\n  menu: {\n    htype: \"ROUTES\",\n    //which component is shown in the menu\n    show: \"MENU\",\n    ROUTES: [{\n      name: \"Headline\",\n      id: \"headlineInput\",\n      dispatch: \"HEADLINE_INPUT\"\n    }, {\n      name: \"Subheadline\",\n      id: \"subheadlineInput\",\n      dispatch: \"SUBHEADLINE_INPUT\"\n    }, {\n      name: \"Image Gallery\",\n      id: \"imageGalleryInput\",\n      dispatch: \"IMAGE_GALLERY_INPUT\"\n    }],\n    STOPS: [{\n      name: \"Headline\",\n      id: \"headlineInput\",\n      dispatch: \"HEADLINE_INPUT\"\n    }, {\n      name: \"Subheadline\",\n      id: \"subheadlineInput\",\n      dispatch: \"SUBHEADLINE_INPUT\"\n    }, {\n      name: \"Image Gallery\",\n      id: \"imageGalleryInput\",\n      dispatch: \"IMAGE_GALLERY_INPUT\"\n    }],\n    POIS: [{\n      name: \"Headline\",\n      id: \"headlineInput\",\n      dispatch: \"HEADLINE_INPUT\"\n    }, {\n      name: \"Subheadline\",\n      id: \"subheadlineInput\",\n      dispatch: \"SUBHEADLINE_INPUT\"\n    }, {\n      name: \"Image Gallery\",\n      id: \"imageGalleryInput\",\n      dispatch: \"IMAGE_GALLERY_INPUT\"\n    }]\n  },\n  simulator: {\n    show: \"ROUTES\",\n    selected: \"empty\"\n  }\n};\n/*simulator states\n*/\n\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INITIALIZE_INPUT_SCREEN_UI:\n      {\n        var selectedDispatch = action.payload.content.dispatch;\n        return _objectSpread({}, state, {\n          menu: _objectSpread({}, state.menu, {\n            //menu for what kind of hierarchy type\n            htype: selectedDispatch,\n            //which component is shown in the menu //menu, headline input, image gallery etc.\n            show: \"MENU\"\n          })\n        });\n      }\n\n    case UPDATE_INPUT_SCREEN_UI:\n      {\n        var _selectedDispatch = action.payload.content;\n        return _objectSpread({}, state, {\n          menu: _objectSpread({}, state.menu, {\n            //which component is shown in the menu //menu, headline input, image gallery etc.\n            show: _selectedDispatch\n          })\n        });\n      }\n\n    case REMOVE_ROUTE:\n      {\n        var index = action.payload.content.removeIndex;\n        var columnId = action.payload.content.removeColumn;\n        return _objectSpread({}, state, {\n          ids: state.columns[columnId].ids.splice(index, 1)\n        });\n      }\n      ;\n\n    case UPDATE_ROUTE_STATE:\n      {\n        var newOrder = action.payload.content.newOrder;\n        var _columnId = action.payload.content.columnId;\n        return _objectSpread({}, state, {\n          //   routeIds: newOrder,\n          columns: _objectSpread({}, state.columns, _defineProperty({}, _columnId, _objectSpread({}, state.columns[_columnId], {\n            ids: newOrder\n          })))\n        });\n      }\n      ;\n\n    case UPDATE_SIMULATOR_SELECTION:\n      {\n        var selectedComponentId = action.payload.content.selectedComponentId;\n        var input = action.payload.content.input;\n\n        if (input == \"YES\") {\n          return _objectSpread({}, state, {\n            simulator: _objectSpread({}, state.simulator, {\n              selected: selectedComponentId\n            })\n          });\n        } else {\n          if (state.simulator.selected == selectedComponentId) {\n            return _objectSpread({}, state, {\n              simulator: _objectSpread({}, state.simulator, {\n                selected: \"empty\"\n              })\n            });\n          } else {\n            return _objectSpread({}, state, {\n              simulator: _objectSpread({}, state.simulator, {\n                selected: selectedComponentId\n              })\n            });\n          }\n        }\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/christian/Development/fible-frontend-nextjs/src/redux/reducers/uiReducer.ts"],"names":["REMOVE_ROUTE","UPDATE_ROUTE_STATE","INITIALIZE_INPUT_SCREEN_UI","UPDATE_INPUT_SCREEN_UI","UPDATE_SIMULATOR_SELECTION","initialState","routes","id","headline","subheadline","stops","attractions","pois","location","lat","lng","address","website","columns","title","ids","columnOrder","menu","htype","show","ROUTES","name","dispatch","STOPS","POIS","simulator","selected","state","action","type","selectedDispatch","payload","content","index","removeIndex","columnId","removeColumn","splice","newOrder","selectedComponentId","input"],"mappings":"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","sourcesContent":["import { REMOVE_ROUTE, UPDATE_ROUTE_STATE, INITIALIZE_INPUT_SCREEN_UI, UPDATE_INPUT_SCREEN_UI, UPDATE_SIMULATOR_SELECTION } from \"../actions/types\";\n\n\n\nconst initialState = {\n    routes: {\n        \"h12345\": {\n            id: \"h12345\",\n            headline: \"Christian's Norway Route\",\n            subheadline: \"Fjords you just have to explore\",\n            stops: [\n                \"Bergen\",\n                \"Stavanger\",\n                \"Molde\",\n                \"Ålesund\"\n            ],\n            attractions: [\"Hiking\", \"Swimming\", \"Nature\"]\n        },\n        \"h54321\": {\n            id: \"h54321\",\n            headline: \"Paul's South Tyrol Route\",\n            subheadline: \"Explore the Dolomites\",\n            stops: [\n                \"Bolzano\",\n                \"Trento\",\n            ],\n            attractions: [\"Hiking\", \"Swimming\", \"Nature\", \"Food\"]\n        },\n        \"h12354\": {\n            id: \"h12354\",\n            headline: \"Simon's Allgäu Route\",\n            subheadline: \"Experience Neuschweinstein and so much more!\",\n            stops: [\n                \"Mammendorf\",\n                \"Füssen\",\n            ],\n            attractions: [\"Hiking\", \"Swimming\", \"Nature\", \"Sking\"]\n        },\n    },\n    stops: {\n        \"s213141\": {\n            id: \"s213141\",\n            headline: \"Bergen\",\n            subheadline: \"Byen ombringet av fjell\",\n            pois: [\n                \"restaurant\",\n                \"accommodation\",\n                \"activities\",\n            ],\n            location: { lat: 1.2222, lng: 1445666 }\n        },\n        \"s54321\": {\n            id: \"s54321\",\n            headline: \"Stavanger\",\n            subheadline: \"Oljehovedstaden\",\n            pois: [\n                \"restaurant\",\n                \"accommodation\",\n                \"activities\",\n            ],\n            location: { lat: 1.5555, lng: 1.214134 }\n        }\n    },\n    pois: {\n        \"p1314134\": {\n            id: \"p1314134\",\n            headline: \"Bergen Fjordrestaurant\",\n            subheadline: \"Fantastisk fisk og sjømat!\",\n            location: { lat: 1.2222, lng: 1445666 },\n            address: \"Bryggen 15a\",\n            website: \"www.bergen-fjordrestaurant.no\"\n        }\n    },\n\n    columns: {\n        \"column-1\": {\n            id: \"column-1\",\n            title: \"Routes\",\n            ids: [\"h12345\", \"h54321\", \"h12354\"],\n        },\n        \"column-2\": {\n            id: \"column-2\",\n            title: \"Stop\",\n            ids: [\"s213141\", \"s54321\"],\n        },\n        \"column-3\": {\n            id: \"column-3\",\n            title: \"Poi\",\n            ids: [\"p1314134\"]\n        }\n    },\n    columnOrder: [\"column-1\", \"column-2\", \"column-3\"],\n    menu: {\n\n        htype: \"ROUTES\",\n        //which component is shown in the menu\n        show: \"MENU\",\n        ROUTES: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\" },\n        { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\" },\n        { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\" },\n        ],\n        STOPS: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\" },\n        { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\" },\n        { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\" },\n        ],\n        POIS: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\" },\n        { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\" },\n        { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\" },\n        ]\n    },\n    simulator: {\n        show: \"ROUTES\",\n        selected: \"empty\"\n\n    },\n}\n\n/*simulator states\n*/\n\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n        case INITIALIZE_INPUT_SCREEN_UI: {\n            const selectedDispatch = action.payload.content.dispatch\n            return {\n                ...state,\n                menu: {\n                    ...state.menu,\n                    //menu for what kind of hierarchy type\n                    htype: selectedDispatch,\n                    //which component is shown in the menu //menu, headline input, image gallery etc.\n                    show: \"MENU\",\n                }\n\n            };\n        }\n        case UPDATE_INPUT_SCREEN_UI: {\n            const selectedDispatch = action.payload.content\n            return {\n                ...state,\n                menu: {\n                    ...state.menu,\n                    //which component is shown in the menu //menu, headline input, image gallery etc.\n                    show: selectedDispatch\n                }\n            }\n        }\n        case REMOVE_ROUTE: {\n            const index = action.payload.content.removeIndex\n            const columnId = action.payload.content.removeColumn;\n\n            return {\n                ...state,\n                ids: state.columns[columnId].ids.splice(index, 1),\n            }\n        };\n        case UPDATE_ROUTE_STATE: {\n            const newOrder = action.payload.content.newOrder\n            const columnId = action.payload.content.columnId\n            return {\n                ...state,\n                //   routeIds: newOrder,\n                columns: {\n                    ...state.columns,\n                    [columnId]: {\n                        ...state.columns[columnId],\n                        ids: newOrder\n                    },\n                }\n            }\n        };\n        case UPDATE_SIMULATOR_SELECTION: {\n            const selectedComponentId = action.payload.content.selectedComponentId\n            const input = action.payload.content.input\n            if (input == \"YES\"){\n                return {\n                    ...state,\n                    simulator: {\n                        ...state.simulator,\n                        selected: selectedComponentId,\n                    }\n                }\n            } else {\n            if (state.simulator.selected == selectedComponentId) {\n                return {\n                    ...state,\n                    simulator: {\n                        ...state.simulator,\n                        selected: \"empty\",\n                    }\n                }\n            }\n            else {\n                return {\n                    ...state,\n                    simulator: {\n                        ...state.simulator,\n                        selected: selectedComponentId,\n\n                    }\n                }\n            }\n        }\n    }\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}