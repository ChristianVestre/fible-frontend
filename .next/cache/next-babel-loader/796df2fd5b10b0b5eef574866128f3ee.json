{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { UPDATE_SELECTOR_MANAGER_STATE } from \"../actions/types\";\nvar initialState = {\n  ROUTES: {\n    selected: false,\n    id: \"\"\n  },\n  STOPS: {\n    selected: false,\n    id: \"\"\n  },\n  POIS: {\n    selected: false,\n    id: \"\"\n  }\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_SELECTOR_MANAGER_STATE:\n      {\n        var selectedId = action.payload.content.itemId;\n        var selectedDispatch = action.payload.content.dispatch;\n\n        switch (selectedDispatch) {\n          case \"ROUTE_SELECT\":\n            {\n              return _objectSpread({}, state, {\n                ROUTES: {\n                  selected: true,\n                  id: selectedId\n                },\n                STOPS: {\n                  selected: false,\n                  id: \"\"\n                }\n              });\n            }\n\n          case \"ROUTE_DESELECT\":\n            {\n              return _objectSpread({}, state, {\n                ROUTES: {\n                  selected: false,\n                  id: \"\"\n                },\n                STOPS: {\n                  selected: false,\n                  id: \"\"\n                }\n              });\n            }\n\n          case \"STOP_SELECT\":\n            {\n              return _objectSpread({}, state, {\n                STOPS: {\n                  selected: true,\n                  id: selectedId\n                }\n              });\n            }\n\n          case \"STOP_DESELECT\":\n            {\n              return _objectSpread({}, state, {\n                STOPS: {\n                  selected: false,\n                  id: \"\"\n                }\n              });\n            }\n        }\n      }\n      ;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/christian/Development/fible-frontend-nextjs/src/redux/reducers/selectorReducer.ts"],"names":["UPDATE_SELECTOR_MANAGER_STATE","initialState","ROUTES","selected","id","STOPS","POIS","state","action","type","selectedId","payload","content","itemId","selectedDispatch","dispatch"],"mappings":";AAAA,SAASA,6BAAT,QAA8C,kBAA9C;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE,KADN;AAEJC,IAAAA,EAAE,EAAE;AAFA,GADS;AAKjBC,EAAAA,KAAK,EAAE;AACHF,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,EAAE,EAAE;AAFD,GALU;AASjBE,EAAAA,IAAI,EAAE;AACFH,IAAAA,QAAQ,EAAC,KADP;AAEFC,IAAAA,EAAE,EAAC;AAFD;AATW,CAArB;AAkBA,eAAe,YAAwC;AAAA,MAA9BG,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,6BAAL;AAAoC;AAChC,YAAMU,UAAU,GAAGF,MAAM,CAACG,OAAP,CAAeC,OAAf,CAAuBC,MAA1C;AACA,YAAMC,gBAAgB,GAAGN,MAAM,CAACG,OAAP,CAAeC,OAAf,CAAuBG,QAAhD;;AACA,gBAAQD,gBAAR;AACI,eAAM,cAAN;AAAuB;AACnB,uCACOP,KADP;AAEIL,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,QAAQ,EAAE,IADN;AAEJC,kBAAAA,EAAE,EAAEM;AAFA,iBAFZ;AAMIL,gBAAAA,KAAK,EAAE;AACHF,kBAAAA,QAAQ,EAAE,KADP;AAEHC,kBAAAA,EAAE,EAAC;AAFA;AANX;AAWH;;AACD,eAAM,gBAAN;AAAyB;AACrB,uCACOG,KADP;AAEIL,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,QAAQ,EAAE,KADN;AAEJC,kBAAAA,EAAE,EAAE;AAFA,iBAFZ;AAMIC,gBAAAA,KAAK,EAAE;AACHF,kBAAAA,QAAQ,EAAE,KADP;AAEHC,kBAAAA,EAAE,EAAC;AAFA;AANX;AAWH;;AAED,eAAM,aAAN;AAAsB;AAClB,uCACOG,KADP;AAEIF,gBAAAA,KAAK,EAAE;AACHF,kBAAAA,QAAQ,EAAE,IADP;AAEHC,kBAAAA,EAAE,EAAEM;AAFD;AAFX;AAOH;;AAED,eAAM,eAAN;AAAwB;AACpB,uCACOH,KADP;AAEIF,gBAAAA,KAAK,EAAE;AACHF,kBAAAA,QAAQ,EAAE,KADP;AAEHC,kBAAAA,EAAE,EAAE;AAFD;AAFX;AAOH;AA9CL;AAiDH;AAAA;;AACD;AACI,aAAOG,KAAP;AAvDR;AAyDH","sourcesContent":["import { UPDATE_SELECTOR_MANAGER_STATE } from \"../actions/types\";\n\nconst initialState = {\n    ROUTES: {\n        selected: false,\n        id: \"\"\n    },\n    STOPS: {\n        selected: false,\n        id: \"\"\n    },\n    POIS: {\n        selected:false,\n        id:\"\"\n    }\n\n}\n\n\n\nexport default function (state = initialState, action) {\n    \n    switch (action.type) {\n        case UPDATE_SELECTOR_MANAGER_STATE: {\n            const selectedId = action.payload.content.itemId\n            const selectedDispatch = action.payload.content.dispatch;\n            switch (selectedDispatch) {\n                case (\"ROUTE_SELECT\"): {\n                    return {\n                        ...state,\n                        ROUTES: {\n                            selected: true,\n                            id: selectedId\n                        },\n                        STOPS: {\n                            selected: false,\n                            id:\"\"\n                        }\n                    }\n                }\n                case (\"ROUTE_DESELECT\"): {\n                    return {\n                        ...state,\n                        ROUTES: {\n                            selected: false,\n                            id: \"\"\n                        },\n                        STOPS: {\n                            selected: false,\n                            id:\"\"\n                        }\n                    }\n                }\n\n                case (\"STOP_SELECT\"): {\n                    return {\n                        ...state,\n                        STOPS: {\n                            selected: true,\n                            id: selectedId\n                        }\n                    }\n                }\n\n                case (\"STOP_DESELECT\"): {\n                    return {\n                        ...state,\n                        STOPS: {\n                            selected: false,\n                            id: \"\"\n                        }\n                    }\n                }\n\n            }\n        };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}