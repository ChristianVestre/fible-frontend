{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/christian/Development/fible-frontend-nextjs/src/components/inputscreen-components/simulator/simulator.tsx\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport HeadlineText from './simulatorComponents/headline';\nimport { updateComponentsOrder } from '../../../redux/actions/dataActions';\n\nclass Simulator extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"componentCreator\", () => {\n      return this.props.dataState[this.props.uiState.simulator.show][this.props.dataState.selectedHtypeId] != undefined ? this.props.dataState[this.props.uiState.simulator.show][this.props.dataState.selectedHtypeId].order.map((id, index) => {\n        let component = this.props.dataState[this.props.uiState.simulator.show][this.props.dataState.selectedHtypeId].components[id];\n\n        switch (component.type) {\n          case \"HEADLINE\":\n            {\n              return __jsx(HeadlineText, {\n                key: component.id,\n                component: component,\n                index: index,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 18\n                },\n                __self: this\n              });\n            }\n\n          default:\n            return __jsx(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            });\n        }\n      }) : [1].map(index => __jsx(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    });\n\n    _defineProperty(this, \"onDragEnd\", result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId == source.droppableId && destination.index == source.index) {\n        return;\n      }\n\n      const newOrder = _Array$from(this.props.dataState[this.props.uiState.simulator.show][this.props.dataState.selectedHtypeId].order);\n\n      const htype = this.props.uiState.simulator.show;\n      const htypeId = this.props.dataState.selectedHtypeId; // const columnId = source.droppableId;\n      //const column = this.props.uiState.columns[source.droppableId]\n      //const newOrder = Array.from(column.ids);\n\n      newOrder.splice(source.index, 1);\n      newOrder.splice(destination.index, 0, draggableId);\n      console.log(newOrder);\n      this.props.updateComponentsOrder({\n        newOrder,\n        htype,\n        htypeId\n      });\n    });\n  }\n\n  render() {\n    return __jsx(BackgroundWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(Droppable, {\n      droppableId: \"simulator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, provided => __jsx(FilledSimulator, _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), this.componentCreator(), provided.placeholder))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    uiState: state.ui,\n    dataState: state.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateComponentsOrder\n})(Simulator);\n/*\nfunction Simulator() {\n    return (\n        <BackgroundWrapper>\n            <ForegroundWrapper>\n              <Image src=\"mountains.png\"></Image>\n            </ForegroundWrapper>\n        </BackgroundWrapper>\n    )\n}\n\nexport default Simulator\n*/\n\nconst BackgroundWrapper = styled.div.withConfig({\n  displayName: \"simulator__BackgroundWrapper\",\n  componentId: \"sc-19oy64e-0\"\n})([\"width:50vw;height:100vh;display:flex;background:white;align-content:center;justify-content:center;\"]);\nconst FilledSimulator = styled.div.withConfig({\n  displayName: \"simulator__FilledSimulator\",\n  componentId: \"sc-19oy64e-1\"\n})([\"width:40vh;height:84vh;align-self:center;display:flex;border-style:solid;border-radius:1.5em;border-color:lightgrey;border-width:0.05em;flex-direction:column;\"]);\nconst Image = styled.img.withConfig({\n  displayName: \"simulator__Image\",\n  componentId: \"sc-19oy64e-2\"\n})([\"border-radius:1.5em;max-width:100%;max-height:30%;height:auto;width:auto;display:block;object-fit:cover;overflow:hidden;\"]);","map":{"version":3,"sources":["/home/christian/Development/fible-frontend-nextjs/src/components/inputscreen-components/simulator/simulator.tsx"],"names":["styled","React","connect","DragDropContext","Droppable","HeadlineText","updateComponentsOrder","Simulator","Component","props","dataState","uiState","simulator","show","selectedHtypeId","undefined","order","map","id","index","component","components","type","result","destination","source","draggableId","droppableId","newOrder","htype","htypeId","splice","console","log","render","onDragEnd","provided","innerRef","droppableProps","componentCreator","placeholder","mapStateToProps","state","ui","data","BackgroundWrapper","div","FilledSimulator","Image","img"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport HeadlineText from './simulatorComponents/headline'\nimport {updateComponentsOrder} from '../../../redux/actions/dataActions'\n\n\n\nclass Simulator extends React.Component<{dataState:any,uiState:any, updateComponentsOrder:any}> {\n\n    componentCreator = () => {\n        return this.props.dataState[this.props.uiState.simulator.show][this.props.dataState.selectedHtypeId] != undefined?\n        this.props.dataState[this.props.uiState.simulator.show][this.props.dataState.selectedHtypeId].order.map((id,index) =>{\n             let component =  this.props.dataState[this.props.uiState.simulator.show][this.props.dataState.selectedHtypeId].components[id];\n             switch (component.type) {\n                case (\"HEADLINE\"): {\n                    return <HeadlineText key={component.id} component={component} index={index}></HeadlineText>\n                }\n                default:\n                    return<div></div>\n            }\n\n\n        }): [1].map((index) => <div key={index}></div>)\n        \n    }\n\n    onDragEnd = result =>{\n        const { destination, source, draggableId } = result;\n        if (!destination) {\n            return;\n        }\n\n        if (destination.droppableId == source.droppableId &&\n            destination.index == source.index) {\n            return;\n        }\n        const newOrder = Array.from(this.props.dataState[this.props.uiState.simulator.show][this.props.dataState.selectedHtypeId].order)\n        const htype = this.props.uiState.simulator.show\n        const htypeId = this.props.dataState.selectedHtypeId\n       // const columnId = source.droppableId;\n        //const column = this.props.uiState.columns[source.droppableId]\n        //const newOrder = Array.from(column.ids);\n\n        newOrder.splice(source.index, 1);\n        newOrder.splice(destination.index, 0, draggableId);\n        console.log(newOrder)\n        this.props.updateComponentsOrder({ newOrder,htype,htypeId  })\n    }\n\n    render() {\n        return <BackgroundWrapper>\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                <Droppable droppableId=\"simulator\">\n                {provided => (\n                <FilledSimulator\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                >{this.componentCreator()}\n                    {provided.placeholder}\n                </FilledSimulator>\n\n                )}\n                </Droppable>\n                 </DragDropContext>\n            \n        </BackgroundWrapper>\n    }\n}\n\nconst mapStateToProps = state => {\n    return { uiState: state.ui, dataState: state.data };\n};\n\nexport default connect(mapStateToProps,{updateComponentsOrder})(Simulator);\n\n\n/*\nfunction Simulator() {\n    return (\n        <BackgroundWrapper>\n            <ForegroundWrapper>\n              <Image src=\"mountains.png\"></Image>\n            </ForegroundWrapper>\n        </BackgroundWrapper>\n    )\n}\n\nexport default Simulator\n*/\nconst BackgroundWrapper = styled.div`\n  width: 50vw;\n  height: 100vh;\n  display:flex;\n  background:white;\n  align-content:center;\n  justify-content:center;\n`;\n\nconst FilledSimulator = styled.div`\n  width:40vh;\n  height: 84vh;\n  align-self:center;\n  display:flex;\n  border-style:solid;\n  border-radius: 1.5em;\n  border-color:lightgrey;\n  border-width:0.05em;\n  flex-direction:column;\n`\n\nconst Image = styled.img`\n  border-radius:1.5em;\n  max-width:100%;\n  max-height:30%;\n  height:auto;\n  width:auto;\n  display: block;\n  object-fit: cover;\n  overflow: hidden;\n\n\n`"]},"metadata":{},"sourceType":"module"}