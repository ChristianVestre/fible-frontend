{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/christian/Development/fible-frontend-nextjs/src/components/inputscreen-components/menu/headlinInput.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { addOrUpdateHeadline, emptySelectedComponent } from '../../../redux/actions/dataActions';\nimport { updateInputScreenUi, updateSimulatorSelection } from '../../../redux/actions/uiActions';\nimport { connect } from 'react-redux';\n\nclass HeadlineInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleInputMenuUpdate\", () => {\n      const dispatch = \"MENU\"; //  console.log(dispatch)\n\n      this.props.updateInputScreenUi(dispatch);\n      this.props.emptySelectedComponent();\n      const selectedComponentId = \"empty\";\n      this.props.updateSimulatorSelection({\n        selectedComponentId\n      });\n    });\n\n    _defineProperty(this, \"handleHeadline\", e => {\n      const type = this.props.uiState.menu.htype;\n      const headline = e.target.value;\n      const selectedHtypeId = this.props.dataState.selectedHtypeId;\n      let dispatch = \"\";\n      const selectedComponentId = this.props.dataState.selectedComponentId;\n\n      if (selectedComponentId == \"empty\") {\n        dispatch = \"ADD_HEADLINE\";\n      } else {\n        dispatch = \"UPDATE_HEADLINE\";\n      }\n\n      this.props.addOrUpdateHeadline({\n        type,\n        headline,\n        selectedHtypeId,\n        dispatch,\n        selectedComponentId\n      });\n\n      if (selectedComponentId != this.props.uiState.simulator.selectedComponentId) {\n        const input = \"YES\";\n        this.props.updateSimulatorSelection({\n          selectedComponentId,\n          input\n        });\n      }\n    });\n\n    _defineProperty(this, \"showText\", () => {\n      let showText;\n      return this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId] != undefined && this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId] != undefined ? showText = this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId].headline : showText = \"\";\n    });\n  }\n\n  render() {\n    return __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(HeaderImage, {\n      src: \"/logo_fible.png\",\n      alt: \"my image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(BackImage, {\n      src: \"/back.svg\",\n      onClick: this.handleInputMenuUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(Headline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Headline Input\"), __jsx(InputWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(StyledTextArea, {\n      onChange: e => this.handleHeadline(e),\n      value: this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId] != undefined && this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId] != undefined ? this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId].headline : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), __jsx(FontSizeDiv, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(FontSizeText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Font Size\"), __jsx(FontSizeInput, {\n      type: \"number\",\n      min: \"0\",\n      step: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataState: state.data,\n    uiState: state.ui,\n    updateInputScreenUi: state.updateInputScreenUi\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateInputScreenUi,\n  addOrUpdateHeadline,\n  emptySelectedComponent,\n  updateSimulatorSelection\n})(HeadlineInput);\nconst Container = styled.div.withConfig({\n  displayName: \"headlinInput__Container\",\n  componentId: \"sc-1vdl9i0-0\"\n})([\"margin:0;width:100%;height:100vh;display:flex;\"]);\nconst HeaderImage = styled.img.withConfig({\n  displayName: \"headlinInput__HeaderImage\",\n  componentId: \"sc-1vdl9i0-1\"\n})([\"height:6vh;width:6vw;position:relative;left:50%;margin:0;top:2%;transform:translate(-50%,0);\"]);\nconst BackImage = styled.img.withConfig({\n  displayName: \"headlinInput__BackImage\",\n  componentId: \"sc-1vdl9i0-2\"\n})([\"padding-top:0.5em;height:2em;width:2em;position:absolute;top:1%;left:1%;\"]);\nconst Headline = styled.h1.withConfig({\n  displayName: \"headlinInput__Headline\",\n  componentId: \"sc-1vdl9i0-3\"\n})([\"position:absolute;;top:10%;left:25%;margin:0;padding:0;font-weight:lighter;transform:translate(-50%,0);\"]);\nconst StyledTextArea = styled.textarea.withConfig({\n  displayName: \"headlinInput__StyledTextArea\",\n  componentId: \"sc-1vdl9i0-4\"\n})([\"height:94%;width:97%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;align-self:center;font-size:4vh;border:0;display:flex;resize:none;:focus{outline:none;caret-color:salmon;}\"]);\nconst InputWrapper = styled.div.withConfig({\n  displayName: \"headlinInput__InputWrapper\",\n  componentId: \"sc-1vdl9i0-5\"\n})([\"position:absolute;width:44vw;top:20%;height:11vh;border-radius:2vh;margin:2vw;padding:1vw;border:solid;border-color:lightgrey;border-width:0.05em;\"]);\nconst FontSizeDiv = styled.div.withConfig({\n  displayName: \"headlinInput__FontSizeDiv\",\n  componentId: \"sc-1vdl9i0-6\"\n})([\"position:absolute;display:flex;flex-direction:row;top:40vh;left:5%;width:10vw;\"]);\nconst FontSizeText = styled.p.withConfig({\n  displayName: \"headlinInput__FontSizeText\",\n  componentId: \"sc-1vdl9i0-7\"\n})([\"font-weight:lighter;\"]);\nconst FontSizeInput = styled.input.withConfig({\n  displayName: \"headlinInput__FontSizeInput\",\n  componentId: \"sc-1vdl9i0-8\"\n})([\"align-self:center;justify-self:flex-end;width:2vw;margin-left:1vw;height:2vh;right:0;border-radius:0.5vh;border:solid;border-color:lightgrey;border-width:0.05em;:focus{outline:none;caret-color:salmon;}direction:rtl\"]);","map":{"version":3,"sources":["/home/christian/Development/fible-frontend-nextjs/src/components/inputscreen-components/menu/headlinInput.tsx"],"names":["React","styled","addOrUpdateHeadline","emptySelectedComponent","updateInputScreenUi","updateSimulatorSelection","connect","HeadlineInput","Component","dispatch","props","selectedComponentId","e","type","uiState","menu","htype","headline","target","value","selectedHtypeId","dataState","simulator","input","showText","undefined","components","render","handleInputMenuUpdate","handleHeadline","mapStateToProps","state","data","ui","Container","div","HeaderImage","img","BackImage","Headline","h1","StyledTextArea","textarea","InputWrapper","FontSizeDiv","FontSizeText","p","FontSizeInput"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { addOrUpdateHeadline, emptySelectedComponent } from '../../../redux/actions/dataActions'\nimport { updateInputScreenUi, updateSimulatorSelection } from '../../../redux/actions/uiActions'\nimport { connect } from 'react-redux';\n\n\n\nclass HeadlineInput extends React.Component<{ updateInputScreenUi: Function, dataState: any, uiState: any, addOrUpdateHeadline: Function, emptySelectedComponent: Function, updateSimulatorSelection:Function }> {\n\n    handleInputMenuUpdate = () => {\n        const dispatch = \"MENU\"\n        //  console.log(dispatch)\n        this.props.updateInputScreenUi(dispatch);\n        this.props.emptySelectedComponent();\n        const selectedComponentId = \"empty\"\n        this.props.updateSimulatorSelection({selectedComponentId})\n    };\n\n    handleHeadline = (e) => {\n        const type = this.props.uiState.menu.htype\n        const headline = e.target.value\n        const selectedHtypeId = this.props.dataState.selectedHtypeId\n        let dispatch = \"\"\n        const selectedComponentId = this.props.dataState.selectedComponentId\n        if(selectedComponentId == \"empty\") {\n            dispatch = \"ADD_HEADLINE\" \n        }else {\n            dispatch = \"UPDATE_HEADLINE\"\n        }\n        this.props.addOrUpdateHeadline({ type, headline, selectedHtypeId, dispatch, selectedComponentId })\n        if(selectedComponentId != this.props.uiState.simulator.selectedComponentId) {\n            const input = \"YES\"\n            this.props.updateSimulatorSelection({selectedComponentId, input})\n        }\n\n    }\n    showText = () => {\n        let showText;\n        return this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId] != undefined &&\n            this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId] != undefined ?\n            showText = this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId].headline :\n            showText = \"\"\n\n    }\n    render() {\n\n        return (\n            <Container>\n                <HeaderImage src=\"/logo_fible.png\" alt=\"my image\"></HeaderImage>\n                <BackImage src=\"/back.svg\" onClick={this.handleInputMenuUpdate}></BackImage>\n                <Headline>Headline Input</Headline>\n                <InputWrapper>\n                    <StyledTextArea onChange={(e) => this.handleHeadline(e)} value={this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId] != undefined &&\n                        this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId] != undefined ?\n                        this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId].headline :\n                        \"\"} />\n                </InputWrapper>\n                <FontSizeDiv>\n                    <FontSizeText>\n                        Font Size\n                </FontSizeText>\n                    <FontSizeInput type=\"number\" min=\"0\" step=\"1\" />\n                </FontSizeDiv>\n            </Container>\n\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return { dataState: state.data, uiState: state.ui, updateInputScreenUi: state.updateInputScreenUi };\n};\n\n\n\nexport default connect(mapStateToProps, { updateInputScreenUi, addOrUpdateHeadline, emptySelectedComponent, updateSimulatorSelection })(HeadlineInput);\n\n\nconst Container = styled.div`\n    margin:0;\n    width:100%;\n    height:100vh;\n    display:flex;\n\n`\n\nconst HeaderImage = styled.img`\n    height: 6vh;\n    width: 6vw;\n    position: relative;\n    left: 50%;\n    margin:0;\n    top:2%;\n    transform: translate(-50%, 0); \n\n`\nconst BackImage = styled.img`\n    padding-top:0.5em;\n    height:2em;\n    width:2em;\n    position: absolute;\n    top:1%;\n    left:1%;\n`\n\nconst Headline = styled.h1`\n    position: absolute;;\n    top:10%;\n    left:25%;\n    margin:0;\n    padding:0;\n    font-weight:lighter;\n    transform: translate(-50%, 0); \n\n`\nconst StyledTextArea = styled.textarea`\n    height: 94%;\n    width: 97%;\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;\n    align-self:center;\n    font-size:4vh;\n    border:0;\n    display:flex;\n    resize:none;\n    :focus {\n        outline:none;\n        caret-color:salmon;\n    }\n`\n\nconst InputWrapper = styled.div`\n    position:absolute;\n    width: 44vw;\n    top:20%;\n    height: 11vh;\n    border-radius: 2vh;\n    margin:2vw;\n    padding:1vw;\n    border:solid;\n    border-color:lightgrey;\n    border-width:0.05em;\n`\n\nconst FontSizeDiv = styled.div`\n    position:absolute;\n    display:flex;\n    flex-direction:row;\n    top:40vh;\n    left:5%;\n    width:10vw;\n`\n\nconst FontSizeText = styled.p`\n    font-weight:lighter;\n`\nconst FontSizeInput = styled.input`\n    align-self:center;\n    justify-self:flex-end;\n    width:2vw;\n    margin-left:1vw;\n    height:2vh;\n    right:0;\n    border-radius:0.5vh;\n    border:solid;\n    border-color:lightgrey;\n    border-width:0.05em;\n    :focus {\n        outline:none;\n        caret-color:salmon;\n    }\n    direction: rtl\n`"]},"metadata":{},"sourceType":"module"}