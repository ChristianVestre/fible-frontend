{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/christian/Development/fible-frontend-nextjs/src/components/route-management/column.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport FibleRoute from './route';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Router from 'next/router';\nimport { initializeInputScreenUi } from '../../redux/actions/uiActions';\nimport { initializeHtype } from '../../redux/actions/dataActions';\nimport { connect } from 'react-redux';\nconst Container = styled.div.withConfig({\n  displayName: \"column__Container\",\n  componentId: \"yv32xa-0\"\n})([\"margin:1em;border:1px solid lightgray;border-radius:2em;width:100%;height:100%;position:relative;\"]);\nconst Title = styled.h1.withConfig({\n  displayName: \"column__Title\",\n  componentId: \"yv32xa-1\"\n})([\"padding:8px;\"]);\nconst RouteList = styled.div.withConfig({\n  displayName: \"column__RouteList\",\n  componentId: \"yv32xa-2\"\n})([\"padding:8px;\"]);\n\nclass Column extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleInputScreenButton\", () => {\n      Router.push({\n        pathname: '/inputScreen'\n      });\n      this.props.initializeHtype({\n        htype: this.props.type\n      });\n      this.props.initializeInputScreenUi({\n        dispatch: this.props.type\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.column.title), __jsx(Droppable, {\n      droppableId: this.props.column.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, provided => __jsx(RouteList, _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), this.props.listItems.map((itemData, index) => __jsx(FibleRoute, {\n      key: itemData.id,\n      type: this.props.type,\n      itemData: itemData,\n      index: index,\n      columnId: this.props.column.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), provided.placeholder)), __jsx(InputScreenButton, {\n      onClick: this.handleInputScreenButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPlus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataState: state.data,\n    initializeInputScreenState: state.initializeInputScreenState\n  };\n};\n\nexport default connect(mapStateToProps, {\n  initializeInputScreenUi,\n  initializeHtype\n})(Column);\nconst InputScreenButton = styled.button.withConfig({\n  displayName: \"column__InputScreenButton\",\n  componentId: \"yv32xa-3\"\n})([\"position:absolute;bottom:0;right:0;font-size:6vh;border:0;color:none;background-color:transparent;:focus{outline:none;}\"]);","map":{"version":3,"sources":["/home/christian/Development/fible-frontend-nextjs/src/components/route-management/column.tsx"],"names":["React","styled","FibleRoute","Droppable","FontAwesomeIcon","faPlus","Router","initializeInputScreenUi","initializeHtype","connect","Container","div","Title","h1","RouteList","Column","Component","push","pathname","props","htype","type","dispatch","render","column","title","id","provided","innerRef","droppableProps","listItems","map","itemData","index","placeholder","handleInputScreenButton","mapStateToProps","state","dataState","data","initializeInputScreenState","InputScreenButton","button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport FibleRoute from './route';\nimport {Droppable} from 'react-beautiful-dnd';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faTimes, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport Router from 'next/router'\nimport {initializeInputScreenUi} from '../../redux/actions/uiActions';\nimport {initializeHtype} from '../../redux/actions/dataActions';\nimport {connect} from 'react-redux';\n\n\n\n\nconst Container = styled.div`\n    margin:1em;\n    border: 1px solid lightgray;\n    border-radius:2em;\n    width:100%;\n    height:100%;\n    position: relative;\n\n`\nconst Title = styled.h1`\n    padding:8px;\n`\nconst RouteList = styled.div`\n    padding:8px;\n`\n\n\nclass Column extends React.Component<{column: any, key:any,dataState:any, listItems:any, type:any,initializeInputScreenUi:Function, initializeHtype:Function}> {\n\n    handleInputScreenButton= () =>{\n        Router.push({\n            pathname: '/inputScreen',\n          })\n        this.props.initializeHtype({htype:this.props.type})\n        this.props.initializeInputScreenUi({dispatch:this.props.type})\n\n    }\n\n    render() {\n       return( \n       <Container>\n        <Title>{this.props.column.title}</Title> \n        <Droppable droppableId={this.props.column.id}>\n        {provided => (       \n        <RouteList\n        ref={provided.innerRef}\n        {...provided.droppableProps}\n        >\n        {this.props.listItems.map((itemData, index) => <FibleRoute key={itemData.id} type={this.props.type} itemData={itemData} index={index} columnId={this.props.column.id}/>)}\n        {provided.placeholder}\n        </RouteList>\n        )}\n        </Droppable>\n        <InputScreenButton onClick={this.handleInputScreenButton} >\n            <FontAwesomeIcon icon={faPlus}/>\n        </InputScreenButton>\n        </Container>\n        \n       )}\n\n}\n\nconst mapStateToProps = state => {\n    return {dataState:state.data ,initializeInputScreenState:state.initializeInputScreenState};\n  };\n\n\n\nexport default connect(mapStateToProps,{initializeInputScreenUi, initializeHtype  })(Column);\n\n\n\nconst InputScreenButton = styled.button`\n    position:absolute;\n    bottom:0;\n    right:0;\n    font-size:6vh;\n    border:0;\n    color:none;\n    background-color:transparent;\n\n    :focus {\n        outline:none;\n    }\n    `"]},"metadata":{},"sourceType":"module"}