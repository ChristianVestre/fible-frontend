{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/christian/Development/fible-frontend-nextjs/src/components/inputscreen-components/simulator/simulatorComponents/headline.tsx\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { updateSimulatorSelection, updateInputScreenUi } from '../../../../redux/actions/uiActions';\nimport { setSelectedComponent } from '../../../../redux/actions/dataActions';\nimport { addOrUpdateHeadline } from '../../../../redux/actions/dataActions';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nclass Headline extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleSelection\", () => {\n      let selectedComponentId = this.props.component.id;\n\n      if (this.props.component.id != this.props.uiState.simulator.selected) {\n        this.props.updateSimulatorSelection({\n          selectedComponentId\n        });\n        this.props.setSelectedComponent({\n          selectedComponentId\n        });\n        this.props.updateInputScreenUi(\"HEADLINE_INPUT\");\n      } else {\n        selectedComponentId = \"empty\";\n        this.props.updateSimulatorSelection({\n          selectedComponentId\n        });\n        this.props.setSelectedComponent({\n          selectedComponentId\n        });\n        this.props.updateInputScreenUi(\"MENU\");\n      }\n    });\n\n    _defineProperty(this, \"handleHeadline\", e => {\n      const type = this.props.uiState.menu.htype;\n      const headline = e.target.value;\n      const selectedHtypeId = this.props.dataState.selectedHtypeId;\n      const selectedComponentId = this.props.dataState.selectedComponentId;\n      const dispatch = \"UPDATE_HEADLINE\";\n      this.props.addOrUpdateHeadline({\n        type,\n        headline,\n        selectedHtypeId,\n        dispatch,\n        selectedComponentId\n      });\n    });\n  }\n\n  handleKeyDown(e) {\n    e.target.style.height = 'inherit';\n    e.target.style.height = `${e.target.scrollHeight}px`; // In case you have a limitation\n    // e.target.style.height = `${Math.min(e.target.scrollHeight, limit)}px`;\n  }\n\n  render() {\n    return __jsx(Draggable, {\n      draggableId: this.props.component.id,\n      index: this.props.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, provided => __jsx(Container, _extends({\n      key: this.props.component.id\n    }, provided.draggableProps, provided.dragHandleProps, {\n      ref: provided.innerRef,\n      onClick: this.handleSelection,\n      datatype: this.props.component.id == this.props.uiState.simulator.selected ? \"-0.2vh\" : \"0\",\n      property: this.props.component.id == this.props.uiState.simulator.selected ? \"dashed\" : \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(HeadlineText, {\n      value: this.props.component.headline,\n      onChange: e => this.handleHeadline(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    uiState: state.ui,\n    dataState: state.data\n  };\n};\n\nconst Container = styled.div.withConfig({\n  displayName: \"headline__Container\",\n  componentId: \"sc-19yc47e-0\"\n})([\"height:auto;width:98%;outline:0px solid transparent;word-wrap:break-word;padding:1%;border:\", \" 0.2vh;margin:\", \";border-radius:2.5vh;display:flex;align-content:center;\"], props => props.property, props => props.datatype);\nconst HeadlineText = styled(TextareaAutosize).withConfig({\n  displayName: \"headline__HeadlineText\",\n  componentId: \"sc-19yc47e-1\"\n})([\"font-weight:lighter;position:relative;user-select:none;left:2%;height:94%;width:96%;font-size:3vh;margin:0.1vh;padding:0.5vh;text-align:center;resize:none;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;align-self:center;border:0;display:flex;:focus{outline:none;caret-color:salmon;}\"]);\nconst HeadlineText2 = styled.textarea.withConfig({\n  displayName: \"headline__HeadlineText2\",\n  componentId: \"sc-19yc47e-2\"\n})([\"font-weight:lighter;height:94%;width:90%;font-size:3vh;margin:0;padding:0.5vh;text-align:center;resize:none;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;align-self:center;border:0;display:flex;:focus{outline:none;caret-color:salmon;}\"]);\nexport default connect(mapStateToProps, {\n  updateSimulatorSelection,\n  setSelectedComponent,\n  updateInputScreenUi,\n  addOrUpdateHeadline\n})(Headline);","map":{"version":3,"sources":["/home/christian/Development/fible-frontend-nextjs/src/components/inputscreen-components/simulator/simulatorComponents/headline.tsx"],"names":["styled","React","connect","Draggable","updateSimulatorSelection","updateInputScreenUi","setSelectedComponent","addOrUpdateHeadline","TextareaAutosize","Headline","Component","selectedComponentId","props","component","id","uiState","simulator","selected","e","type","menu","htype","headline","target","value","selectedHtypeId","dataState","dispatch","handleKeyDown","style","height","scrollHeight","render","index","provided","draggableProps","dragHandleProps","innerRef","handleSelection","handleHeadline","mapStateToProps","state","ui","data","Container","div","property","datatype","HeadlineText","HeadlineText2","textarea"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd'\nimport { updateSimulatorSelection, updateInputScreenUi} from '../../../../redux/actions/uiActions'\nimport { setSelectedComponent } from '../../../../redux/actions/dataActions'\nimport { addOrUpdateHeadline, emptySelectedComponent } from '../../../../redux/actions/dataActions'\nimport TextareaAutosize from 'react-autosize-textarea';\n\n\n\nclass Headline extends React.Component<{component:any, index:any,uiState:any,dataState:any, addOrUpdateHeadline:Function, updateSimulatorSelection:Function, setSelectedComponent:Function, updateInputScreenUi:Function}> {\n    handleSelection = () => {\n        let selectedComponentId = this.props.component.id\n        if(this.props.component.id != this.props.uiState.simulator.selected){\n        this.props.updateSimulatorSelection({selectedComponentId})\n        this.props.setSelectedComponent({selectedComponentId})\n        this.props.updateInputScreenUi(\"HEADLINE_INPUT\")\n        } elseÂ {\n        selectedComponentId = \"empty\"\n        this.props.updateSimulatorSelection({selectedComponentId})\n        this.props.setSelectedComponent({selectedComponentId})\n        this.props.updateInputScreenUi(\"MENU\")\n        }\n    }\n    handleKeyDown(e) {\n        e.target.style.height = 'inherit';\n        e.target.style.height = `${e.target.scrollHeight}px`; \n        // In case you have a limitation\n        // e.target.style.height = `${Math.min(e.target.scrollHeight, limit)}px`;\n      }\n    \n\n    handleHeadline = (e) => {\n        const type = this.props.uiState.menu.htype\n        const headline = e.target.value\n        const selectedHtypeId = this.props.dataState.selectedHtypeId\n        const selectedComponentId = this.props.dataState.selectedComponentId\n        const  dispatch = \"UPDATE_HEADLINE\"\n        this.props.addOrUpdateHeadline({ type, headline, selectedHtypeId, dispatch, selectedComponentId })\n\n\n    }\n\n    render() {\n        return (<Draggable draggableId={this.props.component.id} index={this.props.index}>\n        {provided =>( \n        <Container\n            key = {this.props.component.id}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onClick={this.handleSelection}\n            datatype={this.props.component.id == this.props.uiState.simulator.selected ? \"-0.2vh\":\"0\" }\n            property={this.props.component.id == this.props.uiState.simulator.selected ? \"dashed\":\"none\" }\n            >\n            <HeadlineText value={this.props.component.headline} onChange={ (e) => this.handleHeadline(e)} ></HeadlineText>\n        </Container>\n        )\n        }\n    </Draggable>)\n    }\n}\n\nconst mapStateToProps = state => {\n    return { uiState: state.ui, dataState: state.data };\n};\n\n\nconst Container = styled.div`\n    height:auto;\n    width:98%;\n    outline: 0px solid transparent;\n    word-wrap: break-word;\n    padding:1%;\n    border: ${props => props.property} 0.2vh;\n    margin: ${props => props.datatype};\n    border-radius:2.5vh;\n    display:flex;\n    align-content:center;\n`\n\nconst  HeadlineText = styled(TextareaAutosize)`\n    font-weight: lighter;\n    position:relative;\n    user-select: none;\n    left:2%;\n    height: 94%;\n    width: 96%;\n    font-size:3vh;\n    margin:0.1vh;\n    padding:0.5vh;\n    text-align:center;\n    resize:none;\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;\n    align-self:center;\n    border:0;\n    display:flex;\n    :focus {\n        outline:none;\n        caret-color:salmon;\n    }\n`\n\nconst HeadlineText2 = styled.textarea`\n    font-weight: lighter;\n    height: 94%;\n    width: 90%;\n    font-size:3vh;\n    margin:0;\n    padding:0.5vh;\n    text-align:center;\n    resize:none;\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;\n    align-self:center;\n    border:0;\n    display:flex;\n    :focus {\n        outline:none;\n        caret-color:salmon;\n    }\n`\n\nexport default connect(mapStateToProps,{updateSimulatorSelection, setSelectedComponent, updateInputScreenUi,addOrUpdateHeadline})(Headline);\n\n"]},"metadata":{},"sourceType":"module"}