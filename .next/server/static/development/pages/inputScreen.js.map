{"version":3,"file":"static/development/pages/inputScreen.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./src/components/inputscreen-components/menu/gridElement.tsx","webpack:///./src/components/inputscreen-components/menu/headlinInput.tsx","webpack:///./src/components/inputscreen-components/menu/menu.tsx","webpack:///./src/components/inputscreen-components/menu/menuManager.tsx","webpack:///./src/components/inputscreen-components/menu/subheadlineInput.tsx","webpack:///./src/pages/inputScreen.tsx","webpack:///./src/redux/actions/dataActions.ts","webpack:///./src/redux/actions/types.ts","webpack:///./src/redux/actions/uiActions.ts","webpack:///./src/redux/reducers/dataReducer.ts","webpack:///./src/redux/reducers/index.ts","webpack:///./src/redux/reducers/selectorReducer.ts","webpack:///./src/redux/reducers/uiReducer.ts","webpack:///./src/redux/store.js","webpack:///external \"core-js/library/fn/array/from\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"nanoid\"","webpack:///external \"next/dynamic\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-autosize-textarea\"","webpack:///external \"react-beautiful-dnd\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"redux-thunk\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// object to store loaded chunks\n \t// \"0\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t\"static/development/pages/inputScreen.js\": 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// require() chunk loading for javascript\n\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] !== 0) {\n \t\t\tvar chunk = require(\"../../../\" + ({}[chunkId]||chunkId) + \".js\");\n \t\t\tvar moreModules = chunk.modules, chunkIds = chunk.ids;\n \t\t\tfor(var moduleId in moreModules) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t\tfor(var i = 0; i < chunkIds.length; i++)\n \t\t\t\tinstalledChunks[chunkIds[i]] = 0;\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// uncaught error handler for webpack runtime\n \t__webpack_require__.oe = function(err) {\n \t\tprocess.nextTick(function() {\n \t\t\tthrow err; // catch this error by using import().catch()\n \t\t});\n \t};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import styled from 'styled-components'\nimport React from 'react'\nimport { updateInputScreenUi} from '../../../redux/actions/uiActions'\nimport {connect} from 'react-redux';\n\n\n\n\nclass GridElement extends React.Component<{name:string, dispatch:string, updateInputScreenUi:Function}> {\n\n      \n    \n    handleInputMenuUpdate = () => {\n        const dispatch = this.props.dispatch\n      //  console.log(dispatch)\n        this.props.updateInputScreenUi(dispatch);\n    };\n    \n  \n  render(){\n\n      return(\n        <Wrapper onClick={this.handleInputMenuUpdate}>\n        <StyledText>{this.props.name}</StyledText>\n        </Wrapper>\n      )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {selectorState:state.data ,updateInputScreenUi:state.updateInputScreenUi};\n};\n\n\n\nexport default connect(mapStateToProps,{ updateInputScreenUi })(GridElement);\n\n\n/*\nconst GridElement = props => (\n    <Wrapper>\n    <StyledText>{props.name}</StyledText>\n    </Wrapper>\n  );\n\nexport default GridElement\n*/\n\nconst Wrapper = styled.div`\n    min-width: ${46.9 / 2}vw;\n    margin:1vh;\n    box-sizing: border-box;\n    height:10vh;\n    display:flex;\n    cursor: pointer;\n    -ms-user-select: none; \n    user-select: none;\n\n    :hover {\n        border:solid 0.1vh lightgray;\n        border-radius:2vh;\n    }\n\n    overflow: hidden;\n    transform: translate3d(0, 0, 0);\n        \n    :after {\n        content: \"\";\n        display: block;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        pointer-events: none;\n        background-image: radial-gradient(circle,#d4d4d4 10%, transparent 10.01%);\n        background-repeat: no-repeat;\n        background-position: 50%;\n        transform: scale(10, 10);\n        opacity: 0;\n        transition: transform .5s, opacity 1s;\n        }\n\n    :active:after {\n        transform: scale(0, 0);\n        opacity: .3;\n        transition: 0s;\n    }\n\n\n`\n\nconst StyledText = styled.h2`\n    font-size: 3vh;\n    color:black;\n    border:none;\n    background:none;\n    font-weight:lighter;\n    text-decoration: none;\n    padding-left:1vw;\n    text-justify:center;\n    vertical-align:center;\n    text-align:center;\n`\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { addOrUpdateHeadline, emptySelectedComponent } from '../../../redux/actions/dataActions'\nimport { updateInputScreenUi, updateSimulatorSelection } from '../../../redux/actions/uiActions'\nimport { connect } from 'react-redux';\n\n\n\nclass HeadlineInput extends React.Component<{ updateInputScreenUi: Function, dataState: any, uiState: any, addOrUpdateHeadline: Function, emptySelectedComponent: Function, updateSimulatorSelection:Function }> {\n\n    handleInputMenuUpdate = () => {\n        const dispatch = \"MENU\"\n        //  console.log(dispatch)\n        this.props.updateInputScreenUi(dispatch);\n        this.props.emptySelectedComponent();\n        const selectedComponentId = \"empty\"\n        this.props.updateSimulatorSelection({selectedComponentId})\n    };\n\n    handleHeadline = (e) => {\n        const type = this.props.uiState.menu.htype\n        const headline = e.target.value\n        const selectedHtypeId = this.props.dataState.selectedHtypeId\n        let dispatch = \"\"\n        const selectedComponentId = this.props.dataState.selectedComponentId\n        if(selectedComponentId == \"empty\") {\n            dispatch = \"ADD_HEADLINE\" \n        }else {\n            dispatch = \"UPDATE_HEADLINE\"\n        }\n        this.props.addOrUpdateHeadline({ type, headline, selectedHtypeId, dispatch, selectedComponentId })\n        if(selectedComponentId != this.props.uiState.simulator.selectedComponentId) {\n            const input = \"YES\"\n            this.props.updateSimulatorSelection({selectedComponentId, input})\n        }\n\n    }\n    showText = () => {\n        let showText;\n        return this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId] != undefined &&\n            this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId] != undefined ?\n            showText = this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId].headline :\n            showText = \"\"\n\n    }\n    render() {\n\n        return (\n            <Container>\n                <HeaderImage src=\"/logo_fible.png\" alt=\"my image\"></HeaderImage>\n                <BackImage src=\"/back.svg\" onClick={this.handleInputMenuUpdate}></BackImage>\n                <Headline>Headline Input</Headline>\n                <InputWrapper>\n                    <StyledTextArea onChange={(e) => this.handleHeadline(e)} value={this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId] != undefined &&\n                        this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId] != undefined ?\n                        this.props.dataState[this.props.uiState.menu.htype][this.props.dataState.selectedHtypeId].components[this.props.dataState.selectedComponentId].headline :\n                        \"\"} />\n                </InputWrapper>\n                <FontSizeDiv>\n                    <FontSizeText>\n                        Font Size\n                </FontSizeText>\n                    <FontSizeInput type=\"number\" min=\"0\" step=\"1\" />\n                </FontSizeDiv>\n            </Container>\n\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return { dataState: state.data, uiState: state.ui, updateInputScreenUi: state.updateInputScreenUi };\n};\n\n\n\nexport default connect(mapStateToProps, { updateInputScreenUi, addOrUpdateHeadline, emptySelectedComponent, updateSimulatorSelection })(HeadlineInput);\n\n\nconst Container = styled.div`\n    margin:0;\n    width:100%;\n    height:100vh;\n    display:flex;\n\n`\n\nconst HeaderImage = styled.img`\n    height: 6vh;\n    width: 6vw;\n    position: relative;\n    left: 50%;\n    margin:0;\n    top:2%;\n    transform: translate(-50%, 0); \n\n`\nconst BackImage = styled.img`\n    padding-top:0.5em;\n    height:2em;\n    width:2em;\n    position: absolute;\n    top:1%;\n    left:1%;\n`\n\nconst Headline = styled.h1`\n    position: absolute;;\n    top:10%;\n    left:25%;\n    margin:0;\n    padding:0;\n    font-weight:lighter;\n    transform: translate(-50%, 0); \n\n`\nconst StyledTextArea = styled.textarea`\n    height: 94%;\n    width: 97%;\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;\n    align-self:center;\n    font-size:4vh;\n    border:0;\n    display:flex;\n    resize:none;\n    :focus {\n        outline:none;\n        caret-color:salmon;\n    }\n`\n\nconst InputWrapper = styled.div`\n    position:absolute;\n    width: 44vw;\n    top:20%;\n    height: 11vh;\n    border-radius: 2vh;\n    margin:2vw;\n    padding:1vw;\n    border:solid;\n    border-color:lightgrey;\n    border-width:0.05em;\n`\n\nconst FontSizeDiv = styled.div`\n    position:absolute;\n    display:flex;\n    flex-direction:row;\n    top:40vh;\n    left:5%;\n    width:10vw;\n`\n\nconst FontSizeText = styled.p`\n    font-weight:lighter;\n`\nconst FontSizeInput = styled.input`\n    align-self:center;\n    justify-self:flex-end;\n    width:2vw;\n    margin-left:1vw;\n    height:2vh;\n    right:0;\n    border-radius:0.5vh;\n    border:solid;\n    border-color:lightgrey;\n    border-width:0.05em;\n    :focus {\n        outline:none;\n        caret-color:salmon;\n    }\n    direction: rtl\n`","\nimport React from 'react';\nimport styled from 'styled-components';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faTimes, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport Router from 'next/router'\nimport {connect} from 'react-redux';\nimport Link from 'next';\nimport GridElement from './gridElement'\nimport {deleteHtype} from '../../../redux/actions/dataActions'\n\n\nclass Menu extends React.Component<{uiState:any,deleteHtype:Function,dataState:any}> {\n\n\n    backHandler = () => {\n        Router.push({\n            pathname: '/routemanagement',\n          })\n        const htypeid = this.props.dataState.selectedHtypeId\n        const htype = this.props.uiState.menu.htype\n        this.props.deleteHtype({htypeid,htype})\n        \n    }\n\n    render() {\n       return( \n        <Container>\n                <HeaderImage src=\"/logo_fible.png\" alt=\"my image\"></HeaderImage>\n                <BackImage src=\"/back.svg\" onClick={this.backHandler}></BackImage>\n        <Headline>{this.props.uiState.menu.htype}</Headline>\n        <MenuWrapper>\n       {this.props.uiState.menu[this.props.uiState.menu.htype].map((elem) => {return <GridElement key={elem.id} name={elem.name} dispatch={elem.dispatch}/>})}\n\n        </MenuWrapper>\n        </Container>\n       )}\n\n}\n\nconst mapStateToProps = state => {\n\n    return {uiState:state.ui,dataState:state.data,deleteHtype:state.deleteHtype};\n  };\n\n\n\nexport default connect(mapStateToProps,{deleteHtype})(Menu);\n\n\nconst Container = styled.div`\n    margin:0;\n    width:100%;\n    height:100vh;\n    display:flex;\n    \n\n`\nconst MenuWrapper = styled.div`\n    display:flex;\n    flex-direction:row;\n    width:50vw;\n    height:80%;\n    margin:0;\n    padding:0;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    justify-self: flex-start;\n    position: absolute;\n    bottom: 0;\n\n`\n/*\nconst GridElement = styled.div`\n    min-width: ${100 / 2}%;\n    border: 1px solid black;\n    box-sizing: border-box;\n    height:10vh;\n    display:flex;\n\n\n`\n*/\nconst Headline = styled.h1`\n    position: absolute;;\n    top:10%;\n    left:25%;\n    transform: translate(-50%, 0); \n    margin:0;\n    padding:0;\n    font-weight:lighter;\n\n`\n\n\nconst HeaderImage = styled.img`\n    height: 6vh;\n    width: 6vw;\n    position: relative;\n    left: 50%;\n    margin:0;\n    top:2%;\n    transform: translate(-50%, 0); \n\n`\nconst BackImage = styled.img`\n    padding-top:0.5em;\n    height:2em;\n    width:2em;\n    position: absolute;\n    top:1%;\n    left:1%;\n`","import styled from 'styled-components';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Menu from './menu'\nimport HeadlineInput from './headlinInput';\nimport SubheadlineInput from './subheadlineInput';\n\nclass MenuManager extends React.Component<{state:any}> {\n    \n    menuChoice = () => {\n           switch(this.props.state.menu.show){\n               case(\"MENU\"): {\n                   return<Menu/>\n               }\n               case(\"HEADLINE_INPUT\"):{\n                   return<HeadlineInput/>\n               }\n               case(\"SUBHEADLINE_INPUT\"):{\n                   return<SubheadlineInput/>\n               }\n        }\n    }\n\n    render(){\n        return<Container>\n            {this.menuChoice()}\n        </Container>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {state:state.ui};\n  };\n\nexport default connect(mapStateToProps)(MenuManager);\n\nconst Container = styled.div`\n    margin:0;\n    width:50%;\n    height:100vh;\n    display:flex;\n    border-right: solid 0.1vw lightgray;\n`\n","import React from 'react';\nimport styled from 'styled-components';\nimport { updateInputScreenUi} from '../../../redux/actions/uiActions'\nimport {connect} from 'react-redux';\n\n\n\nclass SubheadlineInput extends React.Component<{updateInputScreenUi:Function}> {\n\n    handleInputMenuUpdate = () => {\n        const dispatch = \"MENU\"\n      //  console.log(dispatch)\n        this.props.updateInputScreenUi(dispatch);\n    };\n\n\n    render() {\n       return( \n        <Container>\n            <HeaderImage src=\"/logo_fible.png\" alt=\"my image\"></HeaderImage>\n            <BackImage src=\"/back.svg\" onClick={this.handleInputMenuUpdate}></BackImage>\n            <Headline>Subheadline Input</Headline>\n            <InputWrapper>\n                <StyledTextArea/>\n            </InputWrapper>\n            <FontSizeDiv>\n                <FontSizeText>\n                    Font Size\n                </FontSizeText>\n                <FontSizeInput type=\"number\" min=\"0\" step=\"1\"/>\n            </FontSizeDiv>\n        </Container>\n        \n       )}\n\n}\n\nconst mapStateToProps = state => {\n    return {selectorState:state.data ,updateInputScreenUi:state.updateInputScreenUi};\n  };\n  \n  \n  \nexport default connect(mapStateToProps,{ updateInputScreenUi })(SubheadlineInput);\n  \n\nconst Container = styled.div`\n    margin:0;\n    width:100%;\n    height:100vh;\n    display:flex;\n\n`\n\nconst HeaderImage = styled.img`\n    height: 6vh;\n    width: 6vw;\n    position: relative;\n    left: 50%;\n    margin:0;\n    top:2%;\n    transform: translate(-50%, 0); \n\n`\nconst BackImage = styled.img`\n    padding-top:0.5em;\n    height:2em;\n    width:2em;\n    position: absolute;\n    top:1%;\n    left:1%;\n`\n\nconst Headline = styled.h1`\n    position: absolute;;\n    top:10%;\n    left:25%;\n    margin:0;\n    padding:0;\n    font-weight:lighter;\n    transform: translate(-50%, 0); \n\n`\nconst StyledTextArea = styled.textarea`\n    height: 94%;\n    width: 97%;\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;\n    align-self:center;\n    font-size:3vh;\n    border:0;\n    display:flex;\n    resize:none;\n    :focus {\n        outline:none;\n        caret-color:salmon;\n    }\n`\n\nconst InputWrapper = styled.div`\n    position:absolute;\n    width: 44vw;\n    top:20%;\n    height: 11vh;\n    border-radius: 2vh;\n    margin:2vw;\n    padding:1vw;\n    border:solid;\n    border-color:lightgrey;\n    border-width:0.05em;\n`\n\nconst FontSizeDiv = styled.div`\n    position:absolute;\n    display:flex;\n    flex-direction:row;\n    top:40vh;\n    left:5%;\n    width:10vw;\n`\n\nconst FontSizeText = styled.p`\n    font-weight:lighter;\n`\nconst FontSizeInput = styled.input`\n    align-self:center;\n    justify-self:flex-end;\n    width:2vw;\n    margin-left:1vw;\n    height:2vh;\n    right:0;\n    border-radius:0.5vh;\n    border:solid;\n    border-color:lightgrey;\n    border-width:0.05em;\n    :focus {\n        outline:none;\n        caret-color:salmon;\n    }\n    direction: rtl\n`","import Link from 'next/link';\nimport styled from 'styled-components';\nimport {connect} from 'react-redux'\nimport { Provider } from 'react-redux';\n//import {store, persistor} from '../redux/store';\nimport store from '../redux/store';\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport MenuManager from '../components/inputscreen-components/menu/menuManager'\nimport Simulator from '../components/inputscreen-components/simulator/simulator';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport  dynamic  from 'next/dynamic';\n\n\n\nconst InputScreen = props => (\n    <Provider store={store}>\n        <Container>\n            <MenuManager/>\n            <DynamicSimulator/>\n        </Container>\n        </Provider>\n);\n/*\n const InputScreen = props => (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n        <Container>\n            <MenuManager/>\n            <Simulator/>\n        </Container>\n        </PersistGate>\n        </Provider>\n);\n\n*/\nexport default InputScreen\n\nconst DynamicSimulator = dynamic(\n    () => import('../components/inputscreen-components/simulator/simulator'),\n    { ssr: false }\n)\n\nconst Container = styled.div`\n    width: 100vw;\n    height: 100vh;\n    margin:0;\n    padding:0;\n    background:white;\n    display:flex;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    align-content:flex-start;\n    justify-content:flex-start;\n    flex-direction:row;\n`\n","import { HEADLINE,\n  INITIALIZE_HTYPE,\n  DELETE_HTYPE,\n  EMPTY_SELECTED_COMPONENT_ID,\n  SET_SELECTED_COMPONENT,\n  UPDATE_COMPONENTS_ORDER,\n\n\n\n} from \"./types\";\n\n\nlet addHeadlineId = 0;\nlet initializeHtypeId = 0;\nlet deleteHtypeId = 0;\nlet emptySelectedComponentId = 0;\nlet setSelectedComponentId = 0;\nlet updateComponentsOrderId = 0;\n\n\n\nexport const addOrUpdateHeadline = content => ({\n  type: HEADLINE,\n  payload: {\n    id:++addHeadlineId,\n    content,\n  }\n})\n\nexport const initializeHtype = content => ({\n  type: INITIALIZE_HTYPE,\n  payload: {\n    id:++initializeHtypeId,\n    content,\n  }\n})\n\nexport const deleteHtype = content => ({\n  type: DELETE_HTYPE,\n  payload: {\n    id:++deleteHtypeId,\n    content,\n  }\n})\n\nexport const emptySelectedComponent = content => ({\n  type: EMPTY_SELECTED_COMPONENT_ID,\n  payload:{\n    id:++emptySelectedComponentId,\n  }\n})\n\nexport const setSelectedComponent = content => ({\n  type: SET_SELECTED_COMPONENT,\n  payload:{\n    id:++setSelectedComponentId,\n    content\n  }\n})\n\nexport const updateComponentsOrder = content => ({\n  type: UPDATE_COMPONENTS_ORDER,\n  payload:{\n    id:++updateComponentsOrderId,\n    content\n  }\n})","export const REMOVE_ROUTE = \"REMOVE_ROUTE\";\nexport const UPDATE_ROUTE_STATE = \"UPDATE_ROUTE_STATE\";\nexport const UPDATE_SELECTOR_MANAGER_STATE = \"UPDATE_SELECTOR_MANAGER_STATE\";\nexport const UPDATE_INPUT_SCREEN_UI = \"UPDATE_INPUT_SCREEN_UI\";\nexport const INITIALIZE_INPUT_SCREEN_UI = \"INITIALIZE_INPUT_SCREEN_UI\";\nexport const HEADLINE = \"ADD_HEADLINE\";\nexport const INITIALIZE_HTYPE = \"INITIALIZE_HTYPE\";\nexport const DELETE_HTYPE = \"DELETE_HTYPE\"\nexport const EMPTY_SELECTED_COMPONENT_ID = \"EMPTY_SELECTED_COMPONENT_ID\"\nexport const UPDATE_SIMULATOR_SELECTION = \"UPDATE_SIMULATOR_SELECTION\"\nexport const SET_SELECTED_COMPONENT = \"SET_SELECTED_COMPONENT\"\nexport const UPDATE_COMPONENTS_ORDER = \"UPDATE_COMPONENTS_ORDER\"","import { REMOVE_ROUTE, UPDATE_ROUTE_STATE, UPDATE_SELECTOR_MANAGER_STATE, \n    UPDATE_INPUT_SCREEN_UI, INITIALIZE_INPUT_SCREEN_UI, \n    UPDATE_SIMULATOR_SELECTION\n  } from \"./types\";\n  //includes route management actions\n\n\n  let routeId = 0;\n  let updateId = 0;\n  let updateManagerStateId = 0;\n  let updateInputScreenUiId = 0;\n  let initializeInputScreenUiId = 0;\n  let updateSimulatorSelectionId = 0;\n\n\n  export const removeRoute = content => ({\n    type: REMOVE_ROUTE,\n    payload: {\n      id: ++routeId,\n      content,\n    }\n  });\n  \n  export const updateOrder = content => ({\n      type: UPDATE_ROUTE_STATE,\n      payload: {\n        id: ++updateId,\n        content,\n      }\n    });\n  \n  export const updateSelectorManagerState = content => ({\n      type: UPDATE_SELECTOR_MANAGER_STATE,\n      payload: {\n        id:++updateManagerStateId,\n        content,\n      }\n   })\n  \n   export const updateInputScreenUi = content => ({\n    type: UPDATE_INPUT_SCREEN_UI,\n    payload: {\n      id:++updateInputScreenUiId,\n      content,\n    }\n  })\n  \n  export const initializeInputScreenUi = content => ({\n    type: INITIALIZE_INPUT_SCREEN_UI,\n    payload: {\n      id:++initializeInputScreenUiId,\n      content,\n    }\n    \n  })\n\n  export const updateSimulatorSelection = content => ({\n    type: UPDATE_SIMULATOR_SELECTION,\n    payload: {\n      id:++updateSimulatorSelectionId,\n      content,\n    }\n    \n  })","import { UPDATE_INPUT_SCREEN_UI, UPDATE_COMPONENTS_ORDER , HEADLINE, INITIALIZE_HTYPE, DELETE_HTYPE, EMPTY_SELECTED_COMPONENT_ID, SET_SELECTED_COMPONENT } from \"../actions/types\";\nimport {updateSimulatorSelection} from '../actions/uiActions'\nimport nanoid from \"nanoid\";\n\n//HTYPE is the hierarchy type, aka route, stop, etc\n//DATA REDUCER + UI REDUCER + ROUTE MANAGEMENT SCREEN REDUCER\nconst initialState = {\n\n\n    user: {\n        name: \"Christian\",\n        ROUTES: [],\n        STOPS: [],\n        POIS: [],\n        email: \"\",\n    },\n    //the id of the hcomponent being worked on\n    selectedHtypeId: \"\",\n    selectedComponentId: \"empty\",\n    ROUTES: {},\n    STOPS: {},\n    POIS: {},\n\n}\n\n\n\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n        case INITIALIZE_HTYPE: {\n            //     const selectedDispatch = action.payload.content.dispatch;\n            const htype = action.payload.content.htype;\n            const htypeid = htype.substring(0, 2) + \"_\" + nanoid(8);\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    [htype]: [...state.user[htype], htypeid]\n                },\n                selectedHtypeId: htypeid,\n                [htype]: {\n                    ...state[htype],\n                    //taking the first two letters of the hierarchy type and combining it with a unique id of length 8\n                    [htypeid]: {\n                        //take the name of the account owner\n                        owner: state.user.name,\n                        //name to be filled out when the route is finished\n                        name: \"\",\n                        order: [],\n                        components: {},\n\n                    }\n                }\n            };\n        }\n        case EMPTY_SELECTED_COMPONENT_ID: {\n            return {\n                ...state,\n                selectedComponentId: \"empty\",\n            }\n        }\n        case DELETE_HTYPE: {\n            const htype = action.payload.content.htype;\n            const htypeid = action.payload.content.htypeid;\n            delete state[htype.toLowerCase()][htypeid]\n            const index = state.user[htype].indexOf(htypeid);\n            delete state.user[htype][index]\n            return state\n        }\n        /*   case FINISH_HTYPE: {\n               const selectedDispatch = action.payload.content.dispatch;\n               const id = action.payload.content.id\n               const htype = action.payload.content.dispatch;\n               return {\n                   ...state,\n   \n                       [htype.toLowerCase()]:{\n                           ...state.data[htype.toLowerCase()],\n                           //taking the first two letters of the hierarchy type and combining it with a unique id of length 8\n                           [htype.toLowerCase().substring(0, 2) + \"_\" + nanoid(8)]:{\n                               //take the name of the account owner\n                               owner:state.data.user.name,\n                               //name to be filled out when the route is finished\n                               name:\"\"\n                               //location of stops?\n                               //pois that belong?\n   \n                           \n                       }\n                   }\n               };\n           },\n   */\n\n        case HEADLINE: {\n            const headline = action.payload.content.headline\n            const htype = action.payload.content.type\n            const htypeid = action.payload.content.selectedHtypeId\n            const dispatch = action.payload.content.dispatch\n            switch (dispatch) {\n                case (\"ADD_HEADLINE\"): {\n                    //create the id because it has not been changed before\n                    const headlineId = \"HL_\" + nanoid(8)\n                    //rebuilding the state object to add new data\n                    console.log(state)\n                    return {\n                        ...state,\n                        selectedComponentId: headlineId,\n                        [htype]: {\n                            ...state[htype],\n                            [htypeid]: {\n                                ...state[htype][htypeid],\n                                order: [...state[htype][htypeid].order, headlineId],\n                                components: {\n                                    ...state[htype][htypeid].components,\n                                    [headlineId]: {\n                                        id: headlineId,\n                                        type: \"HEADLINE\",\n                                        headline: headline\n\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                //case where you want to change the headline but it already exists\n                case (\"UPDATE_HEADLINE\"): {\n                    const headlineId = action.payload.content.selectedComponentId\n                    return {\n                        ...state,\n                        [htype]: {\n                            ...state[htype],\n                            [htypeid]: {\n                                ...state[htype][htypeid],\n                                components: {\n                                    ...state[htype][htypeid].components,\n                                    [headlineId]: {\n                                        id: headlineId,\n                                        type: \"HEADLINE\",\n                                        headline: headline\n                                    }\n                                }\n                            }\n\n                        }\n                    }\n                }\n            }\n        }\n        case (UPDATE_COMPONENTS_ORDER): {\n            const newOrder = action.payload.content.newOrder\n            const htype = action.payload.content.htype\n            const htypeId = action.payload.content.htypeId\n            return {\n                ...state,\n                [htype]: {\n                    ...state[htype],\n                    [htypeId]: {\n                        ...state[htype][htypeId],\n                        order: newOrder,\n                    }\n                }\n            }\n        };\n        case (SET_SELECTED_COMPONENT): {\n            const selectedId = action.payload.content.selectedComponentId\n            return {\n                ...state,\n                selectedComponentId: selectedId,\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n/*\n        case HEADLINE: {\n            const headline = action.payload.content.headline\n            const htype = action.payload.content.type\n            const routeId = action.payload.content.routeId\n            switch(dispatch){\n                case(\"ADD_HEADLINE\"):{\n                //create the id because it has not been changed before\n                const headlineId = htype.toLowerCase().substring(0, 2) + \"_\" + nanoid(8)\n                //rebuilding the state object to add new data\n                return {\n                    ...state,\n                        data: {\n                            ...state.data,\n                                [htype.toLowerCase()]:{\n                                    ...state.data.route,\n                                    [routeId]:{\n                                        ...state.data.route[routeId]\n                                        order:[...state.data.route[routeId].order, headlineId]\n                                        components:{\n                                            ...state.data.route[routeId].components\n                                            [headlineId]:{\n                                                type:\"HEADLINE\"\n                                                headline:headline\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                //case where you want to change the headline but it already exists\n                case(\"UPDATE_HEADLINE\"):{\n                    const headlineId = action.payload.content.headlineId\n                    return {\n                    ...state,\n                        data: {\n                            ...state.data,\n                                [htype.toLowerCase()]:{\n                                    ...state.data.route,\n                                    [routeId]:{\n                                        ...state.data.route[routeId]\n                                        components:{\n                                            ...state.data.route[routeId].components\n                                            []:{\n                                                type:\"HEADLINE\"\n                                                headline:headline\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n\n        */","import { combineReducers } from \"redux\";\nimport ui from \"./uiReducer\";\nimport selector from \"./selectorReducer\";\nimport data from \"./dataReducer\";\n\nexport default combineReducers({ ui,  selector, data});\n","import { UPDATE_SELECTOR_MANAGER_STATE } from \"../actions/types\";\n\nconst initialState = {\n    ROUTES: {\n        selected: false,\n        id: \"\"\n    },\n    STOPS: {\n        selected: false,\n        id: \"\"\n    },\n    POIS: {\n        selected:false,\n        id:\"\"\n    }\n\n}\n\n\n\nexport default function (state = initialState, action) {\n    \n    switch (action.type) {\n        case UPDATE_SELECTOR_MANAGER_STATE: {\n            const selectedId = action.payload.content.itemId\n            const selectedDispatch = action.payload.content.dispatch;\n            switch (selectedDispatch) {\n                case (\"ROUTE_SELECT\"): {\n                    return {\n                        ...state,\n                        ROUTES: {\n                            selected: true,\n                            id: selectedId\n                        },\n                        STOPS: {\n                            selected: false,\n                            id:\"\"\n                        }\n                    }\n                }\n                case (\"ROUTE_DESELECT\"): {\n                    return {\n                        ...state,\n                        ROUTES: {\n                            selected: false,\n                            id: \"\"\n                        },\n                        STOPS: {\n                            selected: false,\n                            id:\"\"\n                        }\n                    }\n                }\n\n                case (\"STOP_SELECT\"): {\n                    return {\n                        ...state,\n                        STOPS: {\n                            selected: true,\n                            id: selectedId\n                        }\n                    }\n                }\n\n                case (\"STOP_DESELECT\"): {\n                    return {\n                        ...state,\n                        STOPS: {\n                            selected: false,\n                            id: \"\"\n                        }\n                    }\n                }\n\n            }\n        };\n        default:\n            return state;\n    }\n}","import { REMOVE_ROUTE, UPDATE_ROUTE_STATE, INITIALIZE_INPUT_SCREEN_UI, UPDATE_INPUT_SCREEN_UI, UPDATE_SIMULATOR_SELECTION } from \"../actions/types\";\n\n\n\nconst initialState = {\n    routes: {\n        \"h12345\": {\n            id: \"h12345\",\n            headline: \"Christian's Norway Route\",\n            subheadline: \"Fjords you just have to explore\",\n            stops: [\n                \"Bergen\",\n                \"Stavanger\",\n                \"Molde\",\n                \"Ålesund\"\n            ],\n            attractions: [\"Hiking\", \"Swimming\", \"Nature\"]\n        },\n        \"h54321\": {\n            id: \"h54321\",\n            headline: \"Paul's South Tyrol Route\",\n            subheadline: \"Explore the Dolomites\",\n            stops: [\n                \"Bolzano\",\n                \"Trento\",\n            ],\n            attractions: [\"Hiking\", \"Swimming\", \"Nature\", \"Food\"]\n        },\n        \"h12354\": {\n            id: \"h12354\",\n            headline: \"Simon's Allgäu Route\",\n            subheadline: \"Experience Neuschweinstein and so much more!\",\n            stops: [\n                \"Mammendorf\",\n                \"Füssen\",\n            ],\n            attractions: [\"Hiking\", \"Swimming\", \"Nature\", \"Sking\"]\n        },\n    },\n    stops: {\n        \"s213141\": {\n            id: \"s213141\",\n            headline: \"Bergen\",\n            subheadline: \"Byen ombringet av fjell\",\n            pois: [\n                \"restaurant\",\n                \"accommodation\",\n                \"activities\",\n            ],\n            location: { lat: 1.2222, lng: 1445666 }\n        },\n        \"s54321\": {\n            id: \"s54321\",\n            headline: \"Stavanger\",\n            subheadline: \"Oljehovedstaden\",\n            pois: [\n                \"restaurant\",\n                \"accommodation\",\n                \"activities\",\n            ],\n            location: { lat: 1.5555, lng: 1.214134 }\n        }\n    },\n    pois: {\n        \"p1314134\": {\n            id: \"p1314134\",\n            headline: \"Bergen Fjordrestaurant\",\n            subheadline: \"Fantastisk fisk og sjømat!\",\n            location: { lat: 1.2222, lng: 1445666 },\n            address: \"Bryggen 15a\",\n            website: \"www.bergen-fjordrestaurant.no\"\n        }\n    },\n\n    columns: {\n        \"column-1\": {\n            id: \"column-1\",\n            title: \"Routes\",\n            ids: [\"h12345\", \"h54321\", \"h12354\"],\n        },\n        \"column-2\": {\n            id: \"column-2\",\n            title: \"Stop\",\n            ids: [\"s213141\", \"s54321\"],\n        },\n        \"column-3\": {\n            id: \"column-3\",\n            title: \"Poi\",\n            ids: [\"p1314134\"]\n        }\n    },\n    columnOrder: [\"column-1\", \"column-2\", \"column-3\"],\n    menu: {\n\n        htype: \"ROUTES\",\n        //which component is shown in the menu\n        show: \"MENU\",\n        ROUTES: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\" },\n        { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\" },\n        { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\" },\n        ],\n        STOPS: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\" },\n        { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\" },\n        { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\" },\n        ],\n        POIS: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\" },\n        { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\" },\n        { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\" },\n        ]\n    },\n    simulator: {\n        show: \"ROUTES\",\n        selected: \"empty\"\n\n    },\n}\n\n/*simulator states\n*/\n\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n        case INITIALIZE_INPUT_SCREEN_UI: {\n            const selectedDispatch = action.payload.content.dispatch\n            return {\n                ...state,\n                menu: {\n                    ...state.menu,\n                    //menu for what kind of hierarchy type\n                    htype: selectedDispatch,\n                    //which component is shown in the menu //menu, headline input, image gallery etc.\n                    show: \"MENU\",\n                }\n\n            };\n        }\n        case UPDATE_INPUT_SCREEN_UI: {\n            const selectedDispatch = action.payload.content\n            return {\n                ...state,\n                menu: {\n                    ...state.menu,\n                    //which component is shown in the menu //menu, headline input, image gallery etc.\n                    show: selectedDispatch\n                }\n            }\n        }\n        case REMOVE_ROUTE: {\n            const index = action.payload.content.removeIndex\n            const columnId = action.payload.content.removeColumn;\n\n            return {\n                ...state,\n                ids: state.columns[columnId].ids.splice(index, 1),\n            }\n        };\n        case UPDATE_ROUTE_STATE: {\n            const newOrder = action.payload.content.newOrder\n            const columnId = action.payload.content.columnId\n            return {\n                ...state,\n                //   routeIds: newOrder,\n                columns: {\n                    ...state.columns,\n                    [columnId]: {\n                        ...state.columns[columnId],\n                        ids: newOrder\n                    },\n                }\n            }\n        };\n        case UPDATE_SIMULATOR_SELECTION: {\n            const selectedComponentId = action.payload.content.selectedComponentId\n            const input = action.payload.content.input\n            if (input == \"YES\"){\n                return {\n                    ...state,\n                    simulator: {\n                        ...state.simulator,\n                        selected: selectedComponentId,\n                    }\n                }\n            } else {\n            if (state.simulator.selected == selectedComponentId) {\n                return {\n                    ...state,\n                    simulator: {\n                        ...state.simulator,\n                        selected: \"empty\",\n                    }\n                }\n            }\n            else {\n                return {\n                    ...state,\n                    simulator: {\n                        ...state.simulator,\n                        selected: selectedComponentId,\n\n                    }\n                }\n            }\n        }\n    }\n\n        default:\n            return state;\n    }\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n//export default createStore(rootReducer, applyMiddleware(thunk));\n/*\n///import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\n//import rootReducer from './reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);*/\n\n\n\n/*\nexport default () => {\n  let store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\n  let persistor = persistStore(store)\n  return { store, persistor }\n} */","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"nanoid\");","module.exports = require(\"next/dynamic\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-autosize-textarea\");","module.exports = require(\"react-beautiful-dnd\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"styled-components\");"],"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","sourceRoot":""}