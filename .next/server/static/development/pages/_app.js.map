{"version":3,"file":"static/development/pages/_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/from.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/extends.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./node_modules/next/app.js","webpack:///./node_modules/next/dist/next-server/lib/utils.js","webpack:///./node_modules/next/dist/pages/_app.js","webpack:///./src/lib/redux/actions/types.ts","webpack:///./src/lib/redux/reducers/dataReducer.ts","webpack:///./src/lib/redux/reducers/index.ts","webpack:///./src/lib/redux/reducers/uiReducer.ts","webpack:///./src/lib/redux/store.ts","webpack:///./src/pages/_app.tsx","webpack:///./src/themes/globalsyles.ts","webpack:///external \"core-js/library/fn/array/from\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptors\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/promise\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"redux-persist\"","webpack:///external \"redux-persist/lib/storage/session\"","webpack:///external \"redux-thunk\"","webpack:///external \"styled-components\"","webpack:///external \"url\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/promise\");","var _Promise = require(\"../core-js/promise\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","var _Object$assign = require(\"../core-js/object/assign\");\n\nfunction _extends() {\n  module.exports = _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","module.exports = require('./dist/pages/_app')\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\n/**\n * Utils\n */\nfunction execOnce(fn) {\n    let used = false;\n    let result = null;\n    return (...args) => {\n        if (!used) {\n            used = true;\n            result = fn.apply(this, args);\n        }\n        return result;\n    };\n}\nexports.execOnce = execOnce;\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return `${protocol}//${hostname}${port ? ':' + port : ''}`;\n}\nexports.getLocationOrigin = getLocationOrigin;\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nexports.getURL = getURL;\nfunction getDisplayName(Component) {\n    return typeof Component === 'string'\n        ? Component\n        : Component.displayName || Component.name || 'Unknown';\n}\nexports.getDisplayName = getDisplayName;\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nexports.isResSent = isResSent;\nasync function loadGetInitialProps(App, ctx) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (App.prototype && App.prototype.getInitialProps) {\n            const message = `\"${getDisplayName(App)}.getInitialProps()\" is defined as an instance method - visit https://err.sh/zeit/next.js/get-initial-props-as-an-instance-method for more information.`;\n            throw new Error(message);\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || (ctx.ctx && ctx.ctx.res);\n    if (!App.getInitialProps) {\n        if (ctx.ctx && ctx.Component) {\n            // @ts-ignore pageProps default\n            return {\n                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n            };\n        }\n        return {};\n    }\n    const props = await App.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = `\"${getDisplayName(App)}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`;\n        throw new Error(message);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(`${getDisplayName(App)} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://err.sh/zeit/next.js/empty-object-getInitialProps`);\n        }\n    }\n    return props;\n}\nexports.loadGetInitialProps = loadGetInitialProps;\nexports.urlObjectKeys = [\n    'auth',\n    'hash',\n    'host',\n    'hostname',\n    'href',\n    'path',\n    'pathname',\n    'port',\n    'protocol',\n    'query',\n    'search',\n    'slashes',\n];\nfunction formatWithValidation(url, options) {\n    if (process.env.NODE_ENV === 'development') {\n        if (url !== null && typeof url === 'object') {\n            Object.keys(url).forEach(key => {\n                if (exports.urlObjectKeys.indexOf(key) === -1) {\n                    console.warn(`Unknown key passed via urlObject into url.format: ${key}`);\n                }\n            });\n        }\n    }\n    return url_1.format(url, options);\n}\nexports.formatWithValidation = formatWithValidation;\nexports.SUPPORTS_PERFORMANCE = typeof performance !== 'undefined';\nexports.SUPPORTS_PERFORMANCE_USER_TIMING = exports.SUPPORTS_PERFORMANCE &&\n    typeof performance.mark === 'function' &&\n    typeof performance.measure === 'function';\n","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.Container=Container;exports.createUrl=createUrl;exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));var _react=_interopRequireDefault(require(\"react\"));var _utils=require(\"../next-server/lib/utils\");exports.AppInitialProps=_utils.AppInitialProps;/**\n * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n * This allows for keeping state between navigation, custom error handling, injecting additional data.\n */function appGetInitialProps(_x){return _appGetInitialProps.apply(this,arguments);}function _appGetInitialProps(){_appGetInitialProps=(0,_asyncToGenerator2.default)(function*(_ref){var{Component,ctx}=_ref;var pageProps=yield(0,_utils.loadGetInitialProps)(Component,ctx);return{pageProps};});return _appGetInitialProps.apply(this,arguments);}class App extends _react.default.Component{// Kept here for backwards compatibility.\n// When someone ended App they could call `super.componentDidCatch`.\n// @deprecated This method is no longer needed. Errors are caught at the top level\ncomponentDidCatch(error,_errorInfo){throw error;}render(){var{router,Component,pageProps}=this.props;var url=createUrl(router);return _react.default.createElement(Component,(0,_extends2.default)({},pageProps,{url:url}));}}exports.default=App;App.origGetInitialProps=appGetInitialProps;App.getInitialProps=appGetInitialProps;var warnContainer;var warnUrl;if(process.env.NODE_ENV!=='production'){warnContainer=(0,_utils.execOnce)(()=>{console.warn(\"Warning: the `Container` in `_app` has been deprecated and should be removed. https://err.sh/zeit/next.js/app-container-deprecated\");});warnUrl=(0,_utils.execOnce)(()=>{console.error(\"Warning: the 'url' property is deprecated. https://err.sh/zeit/next.js/url-deprecated\");});}// @deprecated noop for now until removal\nfunction Container(p){if(process.env.NODE_ENV!=='production')warnContainer();return p.children;}function createUrl(router){// This is to make sure we don't references the router object at call time\nvar{pathname,asPath,query}=router;return{get query(){if(process.env.NODE_ENV!=='production')warnUrl();return query;},get pathname(){if(process.env.NODE_ENV!=='production')warnUrl();return pathname;},get asPath(){if(process.env.NODE_ENV!=='production')warnUrl();return asPath;},back:()=>{if(process.env.NODE_ENV!=='production')warnUrl();router.back();},push:(url,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();return router.push(url,as);},pushTo:(href,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();var pushRoute=as?href:'';var pushUrl=as||href;return router.push(pushRoute,pushUrl);},replace:(url,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();return router.replace(url,as);},replaceTo:(href,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();var replaceRoute=as?href:'';var replaceUrl=as||href;return router.replace(replaceRoute,replaceUrl);}};}","\n//.---------------------------\n//----Data------\nexport const DATA_LOAD_USER = \"DATA_LOAD_USER\"\nexport const DATA_LOAD_ROUTE_MGMT_DATA = \"DATA_LOAD_ROUTE_MGMT_DATA\"\nexport const DATA_LOAD_INPUT_SCREEN = \"DATA_LOAD_INPUT_SCREEN\"\nexport const DATA_UPDATE_COMPONENTS_ORDER = \"UPDATE_COMPONENTS_ORDER\"\nexport const DATA_UPDATE_HTYPE_ORDER = \"DATA_UPDATE_HTYPE_ORDER\"\nexport const DATA_UPDATE_CHILD_HTYPE_ORDER = \"DATA_UPDATE_CHILD_HTYPE_ORDER\"\nexport const DATA_UPDATE_COMPONENT = \"DATA_UPDATE_COMPONENT\"\nexport const DATA_ADD_NEW_COMPONENT = \"DATA_ADD_NEW_COMPONENT\"\nexport const DATA_EMPTY_SELECTED_COMPONENT_ID = \"DATA_EMPTY_SELECTED_COMPONENT_ID\"\nexport const DATA_HANDLE_HTYPE_CHANGE = \"DATA_HANDLE_HTYPE_CHANGE\"\nexport const DATA_SET_SELECTED_COMPONENT = \"DATA_SET_SELECTED_COMPONENT\"\nexport const DATA_LOAD_COMPONENTS = \"DATA_LOAD_COMPONENTS\"\nexport const DATA_SET_SELECTED_HTYPE = \"DATA_SET_SELECTED_HTYPE\"\nexport const DATA_DELETE_SELECTED_COMPONENT = \"DATA_DELETE_SELECTED_COMPONENT\"\n//-----UI-------\nexport const UI_UPDATE_ROUTEMGMT_STATE = \"UI_UPDATE_ROUTEMGMT_STATE\"\nexport const UI_LOAD_STOP_AND_POI_MANAGER_STATE = \"UI_LOAD_STOP_AND_POI_MANAGER_STATE\"\nexport const UI_UPDATE_INPUT_SCREEN_STATE = \"UI_UPDATE_INPUT_SCREEN_STATE\";\nexport const UI_UPDATE_SIMULATOR_SELECTION_STATE = \"UI_UPDATE_SIMULATOR_SELECTION_STATE\";\nexport const UI_UPDATE_SELECTOR_MANAGER_STATE = \"UI_UPDATE_SELECTOR_MANAGER_STATE\";\nexport const UI_INITIALIZE_INPUT_SCREEN_UI = \"UI_INITIALIZE_INPUT_SCREEN_UI\";\nexport const UI_UPDATE_SIMULATOR_SELECTION = \"UI_UPDATE_SIMULATOR_SELECTION\"\nexport const UI_UPDATE_ROUTE_STATE = \"UI_UPDATE_ROUTE_STATE\";\nexport const UI_STOP_AND_POI_MANAGER_CONTROLLER = \"UI_STOP_AND_POI_MANAGER_CONTROLLER\";\nexport const UI_SET_TITLE = \"UI_SET_TITLE\";\nexport const UI_INITIALIZE_SIMULATOR_STATE = \"UI_INITIALIZE_SIMULATOR_STATE\";\nexport const UI_UPDATE_INPUT_SCREEN_FLAG = \"UI_UPDATE_INPUT_SCREEN_FLAG\"\n","import {\n    DATA_LOAD_USER,\n    DATA_LOAD_ROUTE_MGMT_DATA,\n    DATA_LOAD_INPUT_SCREEN,\n    DATA_UPDATE_COMPONENTS_ORDER,\n    DATA_UPDATE_HTYPE_ORDER,\n    DATA_UPDATE_CHILD_HTYPE_ORDER,\n    DATA_UPDATE_COMPONENT,\n    DATA_ADD_NEW_COMPONENT,\n    DATA_HANDLE_HTYPE_CHANGE,\n    DATA_SET_SELECTED_COMPONENT,\n    DATA_LOAD_COMPONENTS,\n    DATA_SET_SELECTED_HTYPE,\n    DATA_DELETE_SELECTED_COMPONENT,\n} from \"../actions/types\";\n\n//HTYPE is the hierarchy type, aka route, stop, etc\n//DATA REDUCER + UI REDUCER + ROUTE MANAGEMENT SCREEN REDUCER\n\n//make a reducer that cleans up the routes stops etc when you go to the route management screen.\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case DATA_LOAD_USER: {\n            const { name, email, routes, stops, pois } = action.payload.content;\n            return {\n                ...state,\n                user: {\n                    name: name,\n                    routes: routes ? routes : [],\n                    stops: stops ? stops : [],\n                    pois: pois ? pois : [],\n                    email: email,\n                }\n            }\n        }\n        case DATA_LOAD_ROUTE_MGMT_DATA: {\n            const { htypes } = action.payload.content\n            const { user } = action.payload.content\n            const content = {}\n            for (let item of Object.keys(htypes)) {\n                content[item] = htypes[item].reduce((result, attri) => {\n                    if (attri) {\n                        result[attri.id] = attri;\n                    }\n                    return result;\n                }, {})\n            }\n            return {\n                ...state,\n                user: {\n                    ...user\n                },\n                routes: {\n                    ...content[\"routes\"]\n                },\n                stops: {\n                    ...content[\"stops\"]\n                },\n                pois: {\n                    ...content[\"pois\"]\n                }\n            }\n        }\n        case DATA_LOAD_INPUT_SCREEN: {\n            const { htype } = action.payload.content;\n            const { htypeData } = action.payload.content;\n            const { user } = action.payload.content;\n            const { componentsArray } = action.payload.content;\n            const htypeid = htypeData[htype].id;\n            let components = componentsArray.reduce((result, attri) => {\n                if (attri) {\n                    result[attri.id] = attri;\n                }\n                return result;\n            }, {})\n            let componentIdsArray = componentsArray.reduce((result, attri) => {\n                if (attri) {\n                    result.push(attri.id)\n                }\n                return result;\n            }, [])\n            return {\n\n                ...state,\n                user: {\n                    ...user\n                },\n                selectedHtypeId: htypeid,\n                selectedHtype: htype,\n                [htype]: {\n                    ...state[htype],\n                    //taking the first two letters of the hierarchy type and combining it with a unique id of length 8\n                    [htypeid]: {\n                        ...htypeData[htype]\n                    }\n                },\n                components: {\n                    ...components\n                }\n            }\n        };\n        case DATA_LOAD_COMPONENTS: {\n            const { componentsArray } = action.payload.content\n            let components = componentsArray.reduce((result, attri) => {\n                if (attri) {\n                    result[attri.id] = attri;\n                }\n                return result;\n            }, {})\n            return {\n                ...state,\n                components: {\n                    ...components\n                }\n            }\n        }\n        case DATA_UPDATE_COMPONENTS_ORDER: {\n            const newOrder = action.payload.content.newOrder\n            const htype = action.payload.content.htype\n            const selectedHtypeId = action.payload.content.selectedHtypeId\n            return {\n                ...state,\n                [htype]: {\n                    ...state[htype],\n                    [selectedHtypeId]: {\n                        ...state[htype][selectedHtypeId],\n                        components: newOrder,\n                    }\n                }\n            }\n        }\n        case DATA_UPDATE_HTYPE_ORDER: {\n            const newOrder = action.payload.content.newOrder\n            const htype = action.payload.content.htype\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    [htype]: newOrder\n                }\n            }\n        }\n        case DATA_UPDATE_CHILD_HTYPE_ORDER: {\n            const newOrder = action.payload.content.newOrder\n            const htype = action.payload.content.htype\n            const parentHtype = action.payload.content.parentHtype\n            const parentHtypeId = action.payload.content.parentHtypeId\n            return {\n                ...state,\n                [parentHtype]: {\n                    ...state[parentHtype],\n                    [parentHtypeId]: {\n                        ...state[parentHtype][parentHtypeId],\n                        [htype]: newOrder\n                    }\n                }\n            }\n        }\n        case DATA_ADD_NEW_COMPONENT: {\n            const { htype } = action.payload.content\n            const { selectedHtypeId } = action.payload.content\n            const { component } = action.payload.content;\n            const newComponentsArray = [...state[htype][selectedHtypeId].components, component.id]\n            console.log(component)\n            return {\n                ...state,\n                selectedComponentId: component.id,\n                [htype]: {\n                    ...state[htype],\n                    [selectedHtypeId]: {\n                        ...state[htype][selectedHtypeId],\n                        components: newComponentsArray,\n                    }\n                },\n                components: {\n                    ...state.components,\n                    [component.id]: {\n                        id: component.id,\n                        ownerId:state.user.id,\n                        ownerName:state.user.name,\n                        parentId:selectedHtypeId,\n                        type: component.type,\n                        content: component.content,\n                    }\n                },\n            }\n        }\n        case DATA_UPDATE_COMPONENT: {\n            const { content } = action.payload.content\n            const { selectedComponentId } = action.payload.content\n            return {\n                ...state,\n                components: {\n                    ...state.components,\n                    [selectedComponentId]: {\n                        ...state.components[selectedComponentId],\n                        content: content\n                    }\n                }\n\n            }\n        }\n        case (DATA_UPDATE_COMPONENTS_ORDER): {\n            const newOrder = action.payload.content.newOrder\n            const htype = action.payload.content.htype\n            const selectedHtypeId = action.payload.content.selectedHtypeId\n            return {\n                ...state,\n                [htype]: {\n                    ...state[htype],\n                    [selectedHtypeId]: {\n                        ...state[htype][selectedHtypeId],\n                        components: newOrder,\n                    }\n                }\n            }\n        };\n        case DATA_HANDLE_HTYPE_CHANGE: {\n            const { changedHtype } = action.payload.content\n            const { htypeId } = action.payload.content\n            const { htype } = action.payload.content\n            console.log(changedHtype)\n            console.log(htypeId)\n            return {\n                ...state,\n                [htype]: {\n                    ...state[htype],\n                    [htypeId]: {\n                        ...changedHtype\n                    }\n                }\n            }\n        };\n        case DATA_SET_SELECTED_COMPONENT: {\n            const selectedComponentId = action.payload.content.selectedComponentId\n            return {\n                ...state,\n                selectedComponentId: selectedComponentId,\n            }\n        }\n        case DATA_DELETE_SELECTED_COMPONENT: {\n            console.log(state)\n            const component = state.components[state.selectedComponentId];\n            const htype = state[state.selectedHtype][state.selectedHtypeId]\n            const newComponentsArray = Array.from(htype.components);\n            console.log(component)\n            newComponentsArray.splice(newComponentsArray.indexOf(component.id), 1);\n            const selectedComponentId = state.selectedComponentId\n            delete state.components[selectedComponentId]\n            return {\n                ...state,\n                [state.selectedHtype]: {\n                    ...state[state.selectedHtypeId],\n                    [state.selectedHtypeId]: {\n                        ...htype,\n                        components: newComponentsArray,\n                    }\n                }\n            }\n        }\n        case DATA_SET_SELECTED_HTYPE: {\n            const { selectedHtype } = action.payload.content\n            const { selectedHtypeId } = action.payload.content\n            return {\n                ...state,\n                selectedHtype: selectedHtype,\n                selectedHtypeId: selectedHtypeId\n            }\n        }\n        default:\n            return state\n    }\n\n\n}\n\n\n\nconst initialState = {\n    user: {\n        id:\"\",\n        name: \"\",\n        routes: [],\n        stops: [],\n        pois: [],\n        email: \"\",\n    },\n    selectedHtypeId: \"\",\n    selectedComponentId: \"empty\",\n    selectedHtype: \"\",\n    routes: {},\n    pois: {},\n    stops: {},\n    components: {},\n}\n/*\n\n\n\n\n        case LOAD_HTYPE_DATA: {\n            const content = {}\n            for (let item of Object.keys(action.payload.content.data)) {\n                //to not create a component object in the user state\n                let key = item.substring(3).toLowerCase()\n                console.log(key)\n                content[key] = action.payload.content.data[item].reduce((result, attri, index) => {\n                    if (attri) {\n                        result[attri.id] = attri;\n                    } //a, b, c\n                    return result;\n                }, {})\n            }\n\n            return {\n                ...state,\n                user:{\n                    ...state.user,\n                    routes:action.payload.content.data.getRoutes[0] === null ? []:action.payload.content.data.getRoutes ,\n                    stops:action.payload.content.data.getStops[0] === null ? []:action.payload.content.data.getStops ,\n                    pois:action.payload.content.data.getPois[0] === null ? []:action.payload.content.data.getPois\n                }\n                routes: {\n                    ...content[\"routes\"]\n                },\n                stops: {\n                    ...content[\"stops\"]\n                },\n                pois: {\n                    ...content[\"pois\"]\n                }\n            }\n        }\n\n        case LOAD_USER: {\n            const { name, email, routes, stops, pois } = action.payload.content;\n            return {\n                ...state,\n                user: {\n                    name: name,\n                    routes: routes ? routes : [],\n                    stops: stops ? stops : [],\n                    pois: pois ? pois : [],\n                    email: email,\n                }\n            }\n        }\n        case CLEAN_USER: {\n            return {\n                ...state,\n                user: {\n                    name: '',\n                    routes: [],\n                    stops: [],\n                    pois: [],\n                    email: '',\n                },\n                //the id of the hcomponent being worked on\n                selectedHtypeId: '',\n                selectedComponentId: \"empty\",\n                routes: {},\n                stops: {},\n                pois: {},\n            }\n        }\n        case INITIALIZE_HTYPE: {\n            //const selectedDispatch = action.payload.content.dispatch;\n            const htype = action.payload.content.htype;\n            const htypeid = htype.substring(0, 2) + \"_\" + uuid\n            return {\n                ...state,\n                user: {\n                    ...state.data.inputScreen.user,\n                    [htype]: [...state.data.inputScreen.user[htype], htypeid]\n                },\n                selectedHtypeId: htypeid,\n                [htype]: {\n                    ...state[htype],\n                    //taking the first two letters of the hierarchy type and combining it with a unique id of length 8\n                    [htypeid]: {\n                        //take the name of the account owner\n                        saved: false,\n                        owner: state.data.inputScreen.user.name,\n                        //name to be filled out when the route is finished\n                        name: \"\",\n                        order: [],\n                        components: {},\n\n                    }\n                }\n            };\n        }\n        case EMPTY_SELECTED_COMPONENT_ID: {\n            return {\n                ...state,\n                selectedComponentId: \"empty\",\n            }\n        }\n        case DELETE_HTYPE: {\n            const htype = action.payload.content.htype;\n            const htypeid = action.payload.content.htypeid;\n            delete state[htype][htypeid]\n            const index = state.data.inputScreen.user[htype].indexOf(htypeid);\n            delete state.data.inputScreen.user[htype][index]\n            return state\n        }\n        case HEADLINE: {\n            const headline = action.payload.content.headline\n            const htype = action.payload.content.type\n            const htypeid = action.payload.content.selectedHtypeId\n            const dispatch = action.payload.content.dispatch\n            console.log(headline)\n            switch (dispatch) {\n                case (\"ADD_HEADLINE\"): {\n                    //create the id because it has not been changed before\n                    const headlineId = \"HL_\" + uuid\n                    //rebuilding the state object to add new data\n                    console.log(state)\n                    return {\n                        ...state,\n                        selectedComponentId: headlineId,\n                        [htype]: {\n                            ...state[htype],\n                            [htypeid]: {\n                                ...state[htype][htypeid],\n                                order: [...state[htype][htypeid].order, headlineId],\n                                components: {\n                                    ...state[htype][htypeid].components,\n                                    [headlineId]: {\n                                        id: headlineId,\n                                        type: \"HEADLINE\",\n                                        headline: headline\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                //case where you want to change the headline but it already exists\n                case (\"UPDATE_HEADLINE\"): {\n                    const headlineId = action.payload.content.selectedComponentId\n                    return {\n                        ...state,\n                        [htype]: {\n                            ...state[htype],\n                            [htypeid]: {\n                                ...state[htype][htypeid],\n                                components: {\n                                    ...state[htype][htypeid].components,\n                                    [headlineId]: {\n                                        id: headlineId,\n                                        type: \"HEADLINE\",\n                                        headline: headline\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        case (UPDATE_COMPONENTS_ORDER): {\n            const newOrder = action.payload.content.newOrder\n            const htype = action.payload.content.htype\n            const htypeId = action.payload.content.htypeId\n            return {\n                ...state,\n                [htype]: {\n                    ...state[htype],\n                    [htypeId]: {\n                        ...state[htype][htypeId],\n                        order: newOrder,\n                    }\n                }\n            }\n        };\n\n    }\n}\n\n\n\n\n    /*    case (INITIALIZE_INPUTSCREEN): {\n            console.log(action.payload.content)\n            const { id } = action.payload.content.htype\n            const { components } = action.payload.content\n            let content = {}\n            content = components.reduce((result, attri, index) => {\n                if (attri != \"\") {\n                    result[attri.id] = attri;\n                } //a, b, c\n                return result;\n            }, {})\n            return {\n                ...state,\n                selectedHtypeId: id,\n                components: content\n            }\n        }\n        default:\n            return state;\n    }\n\n\n\n/*\n        case HEADLINE: {\n            const headline = action.payload.content.headline\n            const htype = action.payload.content.type\n            const routeId = action.payload.content.routeId\n            switch(dispatch){\n                case(\"ADD_HEADLINE\"):{\n                //create the id because it has not been changed before\n                const headlineId = htype.toLowerCase().substring(0, 2) + \"_\" + nanoid(8)\n                //rebuilding the state object to add new data\n                return {\n                    ...state,\n                        data: {\n                            ...state.data,\n                                [htype.toLowerCase()]:{\n                                    ...state.data.route,\n                                    [routeId]:{\n                                        ...state.data.route[routeId]\n                                        order:[...state.data.route[routeId].order, headlineId]\n                                        components:{\n                                            ...state.data.route[routeId].components\n                                            [headlineId]:{\n                                                type:\"HEADLINE\"\n                                                headline:headline\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                //case where you want to change the headline but it already exists\n                case(\"UPDATE_HEADLINE\"):{\n                    const headlineId = action.payload.content.headlineId\n                    return {\n                    ...state,\n                        data: {\n                            ...state.data,\n                                [htype.toLowerCase()]:{\n                                    ...state.data.route,\n                                    [routeId]:{\n                                        ...state.data.route[routeId]\n                                        components:{\n                                            ...state.data.route[routeId].components\n                                            []:{\n                                                type:\"HEADLINE\"\n                                                headline:headline\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n\n\n        case CLEAN_NONSAVED_HTYPES:{\n                    const htypes = [\"ROUTES\",\"STOPS\",\"POIS\"]\n                   // const htype= action.payload.content.headline\n                    for(var j in htypes){\n\n                            for(let [key] of Object.entries(state[htypes[j]])){\n                            if(state[htypes[j]][key].saved !=true){\n                                delete state[htypes[j]][key];\n                            }\n                            }\n                        }\n                    return state;\n                } */","import { combineReducers } from \"redux\";\nimport ui from \"./uiReducer\";\nimport data from \"./dataReducer\";\n\nexport default combineReducers({ data,ui});\n","import {\n    UI_UPDATE_ROUTE_STATE,\n    UI_INITIALIZE_INPUT_SCREEN_UI,\n\n    UI_UPDATE_SIMULATOR_SELECTION,\n    UI_STOP_AND_POI_MANAGER_CONTROLLER,\n    UI_SET_TITLE,\n\n    UI_UPDATE_ROUTEMGMT_STATE,\n    UI_LOAD_STOP_AND_POI_MANAGER_STATE,\n    UI_UPDATE_INPUT_SCREEN_STATE,\n    UI_UPDATE_SIMULATOR_SELECTION_STATE,\n\n    UI_INITIALIZE_SIMULATOR_STATE,\n    UI_UPDATE_INPUT_SCREEN_FLAG\n\n\n\n} from \"../actions/types\";\n\n/*simulator states\n*/\n\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case UI_LOAD_STOP_AND_POI_MANAGER_STATE: {\n            if (state.routeMgmt.selector.managerUiCode != \"MAPO\" && state.routeMgmt.selector.managerUiCode != \"MAST\") {\n                console.log(action.payload.content)\n                const htype = action.payload.content.htype\n                if (htype == \"pois\") {\n                    return {\n                        ...state,\n                        routeMgmt: {\n                            ...state.routeMgmt,\n                            selector: {\n                                ...state.routeMgmt.selector,\n                                lastManagerUiCode: state.routeMgmt.selector.managerUiCode,\n                                htype: htype,\n                                managerUiCode: \"MAPO\",\n                            }\n                        }\n                    }\n                } else {\n                    return {\n                        ...state,\n                        routeMgmt: {\n                            ...state.routeMgmt,\n                            selector: {\n                                ...state.routeMgmt.selector,\n                                lastManagerUiCode: state.routeMgmt.selector.managerUiCode,\n                                htype: htype,\n                                managerUiCode: \"MAST\",\n                            }\n                        }\n                    }\n                }\n            } else {\n                return {\n                    ...state,\n                    routeMgmt: {\n                        ...state.routeMgmt,\n                        selector: {\n                            ...state.routeMgmt.selector,\n                            managerUiCode: state.routeMgmt.selector.lastManagerUiCode,\n                        }\n                    }\n                }\n            }\n        }\n        case UI_INITIALIZE_SIMULATOR_STATE: {\n            const show = action.payload.content\n            return {\n                ...state,\n                inputScreen: {\n                    ...state.inputScreen,\n                    simulator:{\n                        show:show\n                    }\n                }\n            }\n        }\n        //--------------------------------------------------- update --------------------------------------------------\n        case UI_UPDATE_ROUTEMGMT_STATE: {\n            const selectedId = action.payload.content.selectedId\n            const htype = action.payload.content.htype\n            let managerUiCode = \"RO\"\n            let selectedroutes = \"\"\n            let selectedstops = \"\"\n            let selectedpois = \"\"\n            if (htype == \"routes\" && state.routeMgmt.selector.selectedroutes != selectedId) {\n                managerUiCode = \"ROST\"\n                selectedroutes = selectedId\n                selectedstops = \"\"\n                selectedpois = \"\"\n            } else if (htype == \"routes\" && state.routeMgmt.selector.selectedroutes == selectedId) {\n                managerUiCode = \"RO\"\n                selectedroutes = \"\"\n                selectedstops = \"\"\n                selectedpois = \"\"\n            } else if (htype == \"stops\" && state.routeMgmt.selector.selectedstops != selectedId) {\n                managerUiCode = \"ROSTPO\"\n                selectedroutes = state.routeMgmt.selector.selectedroutes\n                selectedstops = selectedId\n                selectedpois = \"\"\n            } else if (htype == \"stops\" && state.routeMgmt.selector.selectedstops == selectedId) {\n                managerUiCode = \"ROST\"\n                selectedroutes = state.routeMgmt.selector.selectedroutes\n                selectedstops = \"\"\n                selectedpois = \"\"\n            } else if (htype == \"pois\" && state.routeMgmt.selector.selectedpois != selectedId) {\n                managerUiCode = \"ROSTPO\"\n                selectedroutes = state.routeMgmt.selector.selectedroutes\n                selectedstops = state.routeMgmt.selector.selectedstops\n                selectedpois = selectedId\n            } else if (htype == \"pois\" && state.routeMgmt.selector.selectedpois == selectedId) {\n                managerUiCode = \"ROSTPO\"\n                selectedroutes = state.routeMgmt.selector.selectedroutes\n                selectedstops = state.routeMgmt.selector.selectedstops\n                selectedpois = \"\"\n            }\n\n            return {\n                ...state,\n                routeMgmt: {\n                    ...state.routeMgmt,\n                    selector: {\n                        ...state.routeMgmt.selector,\n                        selectedroutes: selectedroutes,\n                        selectedstops: selectedstops,\n                        selectedpois: selectedpois,\n                        managerUiCode: managerUiCode\n\n                    }\n                }\n            }\n        }\n        case UI_UPDATE_INPUT_SCREEN_STATE: {\n            const selectedDispatch = action.payload.content\n            return {\n                ...state,\n                inputScreen: {\n                    ...state.inputScreen,\n                    inputMenu: {\n                        ...state.inputScreen.inputMenu,\n                        //which component is shown in the menu //menu, headline input, image gallery etc.\n\n                        show: selectedDispatch\n                    }\n                }\n            }\n        }\n        case UI_UPDATE_SIMULATOR_SELECTION_STATE: {\n            const selectedComponentId = action.payload.content.selectedComponentId\n            const input = action.payload.content.input\n            if (input == \"YES\") {\n                return {\n                    ...state,\n                    inputScreen: {\n                        ...state.inputScreen,\n                        simulator: {\n                            ...state.inputScreen.simulator,\n                            selectedComponentId: selectedComponentId,\n                        }\n                    }\n                }\n            } else {\n                if (state.inputScreen.simulator.selected == selectedComponentId) {\n                    return {\n                        ...state,\n                        inputScreen: {\n                            ...state.inputScreen,\n                            simulator: {\n                                ...state.inputScreen.simulator,\n                                selectedComponentId: \"empty\",\n                            }\n                        }\n                    }\n                }\n                else {\n                    return {\n                        ...state,\n                        inputScreen: {\n                            ...state.inputScreen,\n                            simulator: {\n                                ...state.inputScreen.simulator,\n                                selectedComponentId: selectedComponentId,\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        case UI_UPDATE_INPUT_SCREEN_FLAG:{\n            return {\n                ...state,\n                inputScreen: {\n                    ...state.inputScreen,\n                    inputMenu: {\n                        ...state.inputScreen.inputMenu,\n                        reload: state.inputScreen.inputMenu.reload == false ? true : false,\n                    }\n                }\n            }\n\n        }\n\n\n        default:\n            return state\n    }\n\n}\n\n\n\n\nconst initialState = {\n\n    routeMgmt: {\n        selector: {\n            lastManagerUiCode: \"\",\n            selectedroutes: \"\",\n            selectedstops: \"\",\n            selectedpois: \"\",\n            managerUiCode: \"RO\",\n            htype: \"\",\n        },\n        columnOrder: [\"routes\", \"stops\", \"pois\"],\n        title: \"\",\n    },\n    inputScreen: {\n        inputMenu: {\n            htype: \"routes\",\n            //which component is shown in the menu\n            show: \"MENU\",\n            reload: true,\n            routes: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\", type: \"HEADLINE\" },\n            { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\", type: \"SUBHEADLINE\" },\n            { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\", type: \"IMAGE_GALLERY\" },\n            ],\n            stops: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\", type: \"HEADLINE\" },\n            { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\", type: \"SUBHEADLINE\" },\n            { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\", type: \"IMAGE_GALLERY\" },\n            ],\n            pois: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\", type: \"HEADLINE\" },\n            { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\", type: \"SUBHEADLINE\" },\n            { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\", type: \"IMAGE_GALLERY\" },\n            ]\n        },\n        simulator: {\n            show: \"routes\",\n            selected: \"empty\"\n        },\n\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        //----------------------------------------------\n/*\n\n        case STOP_AND_POI_MANAGER_CONTROLLER: {\n            if (state.routeMgmt.selector.managerUiCode != \"MA\") {\n                const htype = action.payload.content.htype\n                return {\n                    ...state,\n                    selector: {\n                        ...state.selector,\n                        lastManagerUiCode: state.selector.managerUiCode,\n                        htype: htype,\n                        managerUiCode: \"MA\",\n                    }\n                }\n            } else {\n                return {\n                    ...state,\n                    selector: {\n                        ...state.selector,\n                        managerUiCode: state.selector.lastManagerUiCode,\n                    }\n                }\n            }\n        }\n\n        case SET_TITLE: {\n            const title = action.payload.content.title\n            return {\n                ...state,\n                title: title\n            }\n        }\n\n\n        case INITIALIZE_INPUT_SCREEN_UI: {\n            const selectedDispatch = action.payload.content.dispatch\n            return {\n                ...state,\n                menu: {\n                    ...state.inputMenu,\n                    //menu for what kind of hierarchy type\n                    htype: selectedDispatch,\n                    //which component is shown in the menu //menu, headline input, image gallery etc.\n                    show: \"MENU\",\n                }\n\n            };\n        }\n        case UPDATE_INPUT_SCREEN_UI: {\n            const selectedDispatch = action.payload.content\n            return {\n                ...state,\n                inputMenu: {\n                    ...state.inputMenu,\n                    //which component is shown in the menu //menu, headline input, image gallery etc.\n\n                    show: selectedDispatch\n\n                }\n            }\n        }\n        case REMOVE_ROUTE: {\n            const index = action.payload.content.removeIndex\n            const columnId = action.payload.content.removeColumn;\n\n            return {\n                ...state,\n                ids: state.columns[columnId].ids.splice(index, 1),\n            }\n        };\n        case UPDATE_ROUTE_STATE: {\n            const newOrder = action.payload.content.newOrder\n            const columnId = action.payload.content.columnId\n            return {\n                ...state,\n                //   routeIds: newOrder,\n                columns: {\n                    ...state.columns,\n                    [columnId]: {\n                        ...state.columns[columnId],\n                        ids: newOrder\n                    },\n                }\n            }\n        };\n        case UPDATE_SIMULATOR_SELECTION: {\n            const selectedComponentId = action.payload.content.selectedComponentId\n            const input = action.payload.content.input\n            if (input == \"YES\") {\n                return {\n                    ...state,\n                    simulator: {\n                        ...state.simulator,\n                        selected: selectedComponentId,\n                    }\n                }\n            } else {\n                if (state.simulator.selected == selectedComponentId) {\n                    return {\n                        ...state,\n                        simulator: {\n                            ...state.simulator,\n                            selected: \"empty\",\n                        }\n                    }\n                }\n                else {\n                    return {\n                        ...state,\n                        simulator: {\n                            ...state.simulator,\n                            selected: selectedComponentId,\n\n                        }\n                    }\n                }\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n*/","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport {persistReducer, persistStore} from 'redux-persist';\n\n//export default createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n//export default createStore(rootReducer, applyMiddleware(thunk));\n\n\n//import rootReducer from './reducers'\n\nconst initialState = {\n  data: {\n    user:{\n      name: \"\",\n      routes: [],\n      stops: [],\n      pois: [],\n      email: \"\",\n  },\n  selectedHtypeId: \"\",\n  selectedComponentId: \"empty\",\n  selectedHtype:\"\",\n  routes:{},\n  pois:{},\n  stops:{},\n  components: {},\n  },\n  ui: {\n    routeMgmt: {\n      selector: {\n        lastManagerUiCode: \"\",\n        selectedroutes: \"\",\n        selectedstops: \"\",\n        selectedpois: \"\",\n        managerUiCode: \"RO\",\n        htype: \"\",\n      },\n      columnOrder: [\"column-1\", \"column-2\", \"column-3\"],\n      title: \"\",\n    },\n    inputScreen: {\n      inputMenu: {\n        htype: \"routes\",\n        //which component is shown in the menu\n        show: \"MENU\",\n        routes: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\", type:\"HEADLINE\" },\n        { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\", type:\"SUBHEADLINE\" },\n        { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\", type:\"IMAGE_GALLERY\" },\n        ],\n        stops: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\", type:\"HEADLINE\" },\n        { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\",type:\"SUBHEADLINE\" },\n        { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\",type:\"IMAGE_GALLERY\"  },\n        ],\n        pois: [{ name: \"Headline\", id: \"headlineInput\", dispatch: \"HEADLINE_INPUT\", type:\"HEADLINE\" },\n        { name: \"Subheadline\", id: \"subheadlineInput\", dispatch: \"SUBHEADLINE_INPUT\", type:\"SUBHEADLINE\" },\n        { name: \"Image Gallery\", id: \"imageGalleryInput\", dispatch: \"IMAGE_GALLERY_INPUT\",type:\"IMAGE_GALLERY\"},\n        ]\n      },\n      simulator: {\n        show: \"routes\",\n        selected: \"empty\"\n      },\n    }\n\n  }\n}\n\n\nconst persistedReducer = persistReducer({key:\"root\", storage:storageSession}, rootReducer)\n/*\nexport const initializeStore = (preloadedState = initialState) => {\n  let store;\n  const isClient = typeof window !== 'undefined';\n  if (isClient) {\n    store = createStore(\n      rootReducer,\n      preloadedState,\n      composeWithDevTools(applyMiddleware(thunk))\n    );\n    //store.__PERSISTOR = persistStore(store);\n  } else {\n    store = createStore(\n      rootReducer,\n      preloadedState,\n      composeWithDevTools(applyMiddleware(thunk))\n    );\n  }*/\n // export const Store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\n  //export const persistor = persistStore(initialState);\n\n//  return store\n//}\n export const Store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\nexport const persistor = persistStore(Store);\n/*\nexport default () => {\n  let initializeStore = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\n  let persistor = persistStore(store)\n  return { initializeStore, persistor }\n} \n*/","import App from 'next/app'\nimport React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport GlobalStyle from '../themes/globalsyles';\nimport { Provider } from 'react-redux'\nimport {Store} from '../lib/redux/store'\n\nconst theme = {\n  colors: {\n    primary: '#0070f3'\n  }\n}\n\n\n\nexport default class MyApp extends App {\n  render () {\n    const { Component, pageProps } = this.props\n    return (\n      <ThemeProvider theme={theme}>\n      <GlobalStyle /> \n      <Provider store={Store}>\n\n        <Component {...pageProps} />\n        </Provider>\n\n      </ThemeProvider>\n    )\n  }\n}\n//      <PersistGate loading={null} persistor={persistor}>\n","import { createGlobalStyle } from 'styled-components';\nconst GlobalStyle = createGlobalStyle`\n  html {\n    margin: 0;\n    padding: 0;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n  }\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n`;\nexport default GlobalStyle;","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"redux-persist\");","module.exports = require(\"redux-persist/lib/storage/session\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"styled-components\");","module.exports = require(\"url\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;;;;;;;;;;;;;ACAA;AACA;;;;;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;ACrGA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;;;;;AAGA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;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","sourceRoot":""}